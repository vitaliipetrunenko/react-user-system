{"version":3,"sources":["apiCalls/apiCalls.js","components/dashboard/Dashboard.jsx","redux/actionCreators.js","components/userboard/userprofiles/ProfileBox.jsx","components/forms/common/FormikMaterialTextField.jsx","components/forms/ProfileForm.jsx","components/userboard/userprofiles/UserProfiles.jsx","components/userboard/Userboard.jsx","components/header/Header.jsx","components/controlpanel/UserBox.jsx","components/controlpanel/ControlPanel.jsx","components/forms/LoginForm.jsx","App.js","hooks/useToken.js","redux/authReducer.js","redux/profilesReducer.js","redux/redux-store.js","index.js","components/userboard/userprofiles/UserProfiles.module.css","components/header/Header.module.css","components/forms/styles/Login.module.css","components/dashboard/Dashboard.module.css"],"names":["loginUser","credentials","method","a","fetch","headers","body","JSON","stringify","then","data","json","regUser","token","catch","err","loadUserFromToken","fetchUser","result","getProfiles","email","profileChange","profile","fetchUsers","user","Dashboard","useState","users","profiles","matureProfiles","stats","setStats","useEffect","res","className","styl","setUserAC","User","type","setProfilesAC","ProfileBoxHOC","connect","state","ownProps","props","operation","setOperation","name","setName","surname","setSurname","age","setAge","handleSubmit","e","preventDefault","author","alert","currUser","questionButtons","Button","value","onClick","defaultButtons","chosenButtons","boxValues","inputAreas","TextField","id","label","onChange","target","parseInt","defaultNames","box","alt","src","onSubmit","FormikMaterialTextField","formik","useFormikContext","console","log","errors","error","values","onInput","handleChange","onBlur","handleBlur","helperText","profileProcess","setProfilesACprop","ProfileFormHOC","initialValues","validate","test","OfflinePinSharp","HocUserProfiles","authData","profileList","profileData","currProfiles","username","userboxes","map","el","_id","Userboard","boxGrid","AdminUserboard","location","useLocation","wantedUser","setWantedUser","wantedProfile","Header","role","adminPhoto","userPhoto","Buttons","to","pathname","HomeSharp","clearToken","UserBoxHOC","mail","setMail","setRole","setUsers","Select","roleSelect","ControlPanelHOC","Users","UserList","i","authProcess","password","regResponse","setToken","AuthFormHOC","formikWrap","formikForm","Radio","checked","App","setTokenAC","getToken","tokenString","localStorage","getItem","parse","userToken","setItem","removeItem","renewToken","useToken","expiry","Date","getTime","exact","path","SET_USER","SET_TOKEN","defaultUsers","authReducer","action","SET_PROFILES","defaultProfiles","profileReducer","reducers","combineReducers","store","createStore","ReactDOM","render","getState","dispatch","bind","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.66b784f7.chunk.js","sourcesContent":["export async function loginUser(credentials, method) {\r\n    return fetch(\"/api/login\", {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    }).then((data) => data.json());\r\n  }\r\n  \r\n  export async function regUser(credentials, method) {\r\n    return fetch(\"/api/register\", {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    }).then((data) => data.json());\r\n  }\r\n\r\n export async function fetchUser(token) {\r\n\r\n    return fetch('/api/login', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(token)\r\n    })\r\n      .then(data => data.json()).catch(err =>{return err})\r\n   }\r\n  \r\n export function loadUserFromToken(token){\r\n    return fetchUser(token).then((result,err)=>{\r\n      \r\n      if (!err){\r\n  \r\n      \r\n      return result\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n      \r\n      \r\n    })\r\n  \r\n    \r\n  }\r\n  \r\n  export async function  getProfiles(email){\r\n    return fetch('/api/profiles', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({email:email})\r\n    })\r\n      .then(data => data.json())\r\n  }\r\n  \r\n  export async function profileChange(profile,method) {\r\n    return fetch('/api/profiles', {\r\n      method: method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(profile)\r\n    })\r\n      .then(data => data.json())\r\n   }\r\n\r\n   export function  getStats(){\r\n    return fetch('/api/stats',{method:\"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body:null\r\n  }).then(data => \r\n        data.json())\r\n  }\r\n\r\n  export async function fetchUsers(method,user=null) {\r\n \r\n    return fetch('/api/admin', {\r\n      method: method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({user})\r\n    })\r\n      .then(data => data.json()).catch(err =>{return err})\r\n   }","import React, { useEffect,useState } from 'react';\r\nimport { getStats } from '../../apiCalls/apiCalls';\r\nimport styl from './Dashboard.module.css'\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n    const [stats,setStats]=useState({users:0,profiles:0,matureProfiles:0});\r\n    useEffect(()=>{\r\n        getStats().then(res =>{\r\n            setStats({users:res[0],profiles:res[1],matureProfiles:res[2]});\r\n        })\r\n    },[])\r\n  return(<div className={styl.Dashboard}>\r\n  <div><h2>Dashboard</h2></div>\r\n      <div>Users:<br/><span>{stats.users}</span></div>  <div>Profiles:<br/> <span>{stats.profiles}</span></div>  <div>Profiles older than 18:<br/> <span>{stats.matureProfiles}</span></div>\r\n    \r\n    </div>\r\n  );\r\n}","export const setUserAC = (User) => ({type:\"SET-USER\",user:User});\r\nexport const setProfilesAC = (profiles) => ({type:\"SET-PROFILES\",profiles:profiles});\r\nexport const setTokenAC = (token) => ({type:\"SET-TOKEN\",token:token});\r\n\r\n\r\n","import { Button, TextField } from '@material-ui/core';\r\n\r\nimport React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { getProfiles,profileChange } from '../../../apiCalls/apiCalls';\r\nimport {setProfilesAC} from '../../../redux/actionCreators'\r\nimport styl from './UserProfiles.module.css'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n function ProfileBox(props) {\r\n    const [operation, setOperation] = useState(\"NONE\");\r\n    const [name, setName] = useState(props.name);\r\n    const [surname, setSurname] = useState(props.surname);\r\n    const [age, setAge] = useState(props.age);\r\n    \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(operation === 'EDIT'){\r\n            const changeProfileResult = await profileChange(\r\n                [{name,surname,age,author:props.author},{name:props.name,surname:props.surname,age:props.age,author:props.author}],\"PATCH\"\r\n            )\r\n            if(changeProfileResult===false){\r\n                alert(\"duplicate profile\")\r\n            }\r\n        getProfiles(props.currUser).then((result)=>{\r\n            props.setProfilesAC(result)\r\n            setOperation(\"NONE\")\r\n          })\r\n      }\r\n      else if(operation === 'DELETE'){\r\n        const changeProfileResult = await profileChange(\r\n            {name:props.name,surname:props.surname,age:props.age,author:props.author},\"DELETE\"\r\n        )\r\n        if(changeProfileResult===false){\r\n            alert(\"profile not deleted\")\r\n        }\r\n    getProfiles(props.currUser).then((result)=>{\r\n        props.setProfilesAC(result)\r\n        setOperation(\"NONE\")\r\n      })\r\n  }\r\n\r\n    }\r\n    const questionButtons = [(<Button type=\"submit\" name=\"okay\">Okay<CheckIcon/></Button>),(<Button value=\"NONE\" onClick={e => setOperation(\"NONE\")}>Cancel<CancelIcon/> </Button>),null,null]\r\n    const defaultButtons =[null,null,(<Button value=\"EDIT\" name=\"edit\" onClick={e=>setOperation(\"EDIT\")}>Edit<CreateIcon/></Button>),(<Button value=\"DELETE\" name=\"delete\" onClick={e=>setOperation(\"DELETE\")}>Delete<DeleteIcon/></Button>)]\r\n    \r\n    let chosenButtons = [];\r\n    \r\n    if(operation ===\"NONE\") chosenButtons=defaultButtons    \r\n    else chosenButtons=questionButtons\r\n\r\n    let boxValues = []\r\n\r\n    const inputAreas =[(<TextField value={name} id=\"name\" name=\"name\" label=\"name\" onChange={e => setName(e.target.value)}/>),(<TextField value={surname} onChange={e => setSurname(e.target.value)}/>),(<TextField type=\"number\" value={age} onChange={e => setAge(parseInt(e.target.value))}/>)]\r\n    const defaultNames=[(props.name ? props.name: \"Loading\"),(props.surname ? props.surname: \"Loading\"),(props.age ? props.age: \"Loading\")]\r\n\r\n    if(operation ===\"EDIT\") boxValues=inputAreas\r\n    else boxValues=defaultNames\r\n\r\n    return(\r\n        <div className={styl.box}>\r\n        \r\n            {operation===\"NONE\"?<p><a><img alt={\"\"} src='http://mymbs.co.id/public/upload/image/user/user.png'></img></a></p> :null}\r\n            <form onSubmit={handleSubmit} >\r\n            <span name=\"name\" label=\"name\">Name: {boxValues[0]}</span>\r\n            <span>Surname: {boxValues[1]}</span>\r\n            <span>Age: {boxValues[2]}</span>\r\n            {operation===\"DELETE\" ? (<span>Are You sure?<br/></span>) : null}\r\n            <div>\r\n            {chosenButtons}\r\n            </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => ({\r\n\r\n}) \r\n\r\nlet ProfileBoxHOC = connect(mapStateToProps,{setProfilesAC})(ProfileBox)\r\nexport default  ProfileBoxHOC;\r\n","import React from 'react'\r\nimport {useFormikContext} from 'formik'\r\nimport {TextField} from '@material-ui/core'\r\n\r\n\r\n\r\nfunction FormikMaterialTextField(props) {\r\n    const formik = useFormikContext()\r\n    const {name} = props\r\nconsole.log(formik.errors)\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            error={!!formik.errors[name]}\r\n            value={formik.values[name]}\r\n            onInput={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            helperText={formik.errors[name]}        />\r\n    )\r\n}\r\n\r\nexport default FormikMaterialTextField\r\n","import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { loginUser, regUser,getProfiles, profileChange } from \"../../apiCalls/apiCalls\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setUserAC, setProfilesAC } from \"../../redux/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\nimport FormikMaterialTextField from \"./common/FormikMaterialTextField\";\r\nimport styl from \"./styles/Login.module.css\";\r\nimport { Button, Radio } from \"@material-ui/core\";\r\nimport { OfflinePinSharp } from '@material-ui/icons/'\r\n\r\n\r\nfunction validate (values,operation){\r\n    const errors={};\r\n    if (!values.name) {\r\n     errors.name = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-]{2,}$/i.test(values.name)\r\n   ) {\r\n     errors.name = 'Invalid name';\r\n   }\r\n   if (!values.surname){\r\n    errors.surname = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-0-9]{2,}$/i.test(values.surname)\r\n  ) {\r\n    errors.surname = 'Invalid surname';\r\n  }\r\n  if (!values.age){\r\n    errors.age = 'Required';\r\n   } else if (\r\n    !/^[0-9]{1,}$/i.test(values.age)) {\r\n    errors.age = 'Invalid age';\r\n  }\r\n   return errors;\r\n}\r\n\r\nasync function profileProcess(profile,User,setProfilesACprop){\r\n        console.log(\"User:\",User)\r\n        const addProfileResult = await profileChange(\r\n            {name:profile.name,surname:profile.surname,age:profile.age,author:User},\"PUT\"\r\n        )\r\n        if(addProfileResult===false){\r\n            alert(\"duplicate profile\")\r\n        }\r\n        getProfiles(User).then((result)=>{\r\n            setProfilesACprop(result)\r\n          })\r\n}\r\n\r\nconst ProfileForm = (props) => {\r\n  \r\n  return (\r\n    <Formik \r\n      initialValues={{ name: \"\", surname: \"\", age: \"\" }}\r\n      validate={(values)=>validate(values)}\r\n      onSubmit={ async (profile) => profileProcess(profile,props.User,props.setProfilesAC)}\r\n    >\r\n      \r\n        \r\n          <Form>\r\n            <div>\r\n            Name:<br/>\r\n            <FormikMaterialTextField name=\"name\" /><br/>\r\n  \r\n            </div>\r\n\r\n            <div>\r\n            Surname:<br/>\r\n            <FormikMaterialTextField name=\"surname\" /><br/>\r\n         \r\n            </div>\r\n\r\n            <div>\r\n            Age:<br/>\r\n            <FormikMaterialTextField type=\"number\" name=\"age\" /><br/>\r\n         \r\n            </div> \r\n           \r\n            <Button type=\"submit\"> <OfflinePinSharp />  </Button>\r\n          </Form>\r\n        \r\n\r\n    </Formik>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n    state: state,\r\n  });\r\n  let ProfileFormHOC = connect(mapStateToProps, { setProfilesAC })(ProfileForm);\r\nexport default ProfileFormHOC;","import { connect } from \"react-redux\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport {setProfilesAC} from './../../../redux/actionCreators'\r\n\r\nimport { getProfiles, profileChange } from \"../../../apiCalls/apiCalls\"\r\n\r\nimport styl from './UserProfiles.module.css'\r\nimport ProfileBoxHOC from \"./ProfileBox\"\r\n\r\nimport { Button, TextField } from \"@material-ui/core\"\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ProfileFormHOC from \"../../forms/ProfileForm\"\r\n\r\n\r\n\r\nfunction validateProfile(){\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction UserProfiles(props){\r\n    const [operation, setOperation] = useState();\r\n    const [name, setName] = useState();\r\n    const [surname, setSurname] = useState();\r\n    const [age, setAge] = useState();\r\n    const [errors,setErrors] = useState();\r\n    console.log(\"UserProfilesUser and curruser\", props.User,props.currUser.email)\r\n    let username=(props.User? props.User : props.currUser.email);\r\n\r\n    useEffect(() => {\r\n        props.setProfilesAC([])\r\n           \r\n                getProfiles(username).then(profiles =>{\r\n                    console.log(\"setting from userProfiles\")\r\n                    props.setProfilesAC(profiles)\r\n                })\r\n            \r\n    },[username])    \r\n        \r\n     \r\n    let userboxes = [...props.profileList].map(el => <ProfileBoxHOC  key={el._id} currUser={username} name={el.name} surname={el.surname} age={el.age} author={el.author}/>)\r\nreturn(\r\n    <div>\r\n        <div className={styl.Userboard}>\r\n        <div name=\"Greeting\">\r\n        Welcome, {props.currUser.email}!<br/>\r\n        Browsing, {(username)} profiles </div>\r\n\r\n        \r\n        {operation === \"ADD\" ? <div>\r\n        <ProfileFormHOC User={username}></ProfileFormHOC>\r\n          <Button onClick={()=>{setOperation(\"NONE\")}}><CancelIcon/></Button>\r\n        </div>\r\n\r\n       : \r\n      <Button  id=\"ADD\"  value=\"ADD\" onClick={e => setOperation(\"ADD\")}> Add Profile <CreateIcon/></Button> }\r\n          </div>\r\n        <div className={styl.boxGrid}>{userboxes}</div>\r\n    </div>\r\n)\r\n\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => {\r\n    \r\n        return({\r\n            currUser:state.authData.currUser, \r\n            profileList:state.profileData.currProfiles\r\n        })\r\n    }\r\n    \r\n\r\n\r\n\r\nlet HocUserProfiles = connect(mapStateToProps,{setProfilesAC})(UserProfiles)\r\nexport default HocUserProfiles ","import React,{useEffect, useState} from 'react';\r\nimport HocUserProfiles from './userprofiles/UserProfiles';\r\nimport {useLocation} from 'react-router-dom'\r\n\r\n\r\nexport default function Userboard(props) {\r\n    \r\n  return(<div >\r\n  \r\n    <HocUserProfiles User={props.state.authData.currUser ? props.state.authData.currUser.email : null} />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport function AdminUserboard(props) {\r\n    let location = useLocation();\r\n      console.log(location)\r\n      const [wantedUser, setWantedUser] = useState();\r\n      useEffect(()=>{\r\n        setWantedUser(location.state.wantedProfile)\r\n      },[])\r\n      \r\n    return(\r\n        <div>\r\n\r\n    <HocUserProfiles User={wantedUser ? wantedUser :null} />\r\n    </div>\r\n    )\r\n}","import { Button } from '@material-ui/core'\r\nimport { HomeSharp } from '@material-ui/icons'\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styl from './Header.module.css'\r\n\r\nexport default  function Header(props){\r\n    return(\r\n        <div className={styl.Header}>\r\n        <div className={styl.User}><img className={props.currUser.role === 'ADMIN' ? styl.adminPhoto : styl.userPhoto} alt={\"\"} src={\"http://mymbs.co.id/public/upload/image/user/user.png\"}></img><p>{props.currUser.email}</p></div>\r\n        <div className={styl.Buttons}>\r\n        <NavLink to={{\r\n   pathname:'/',\r\n   state: {wantedProfile:props.currUser.email}  \r\n }}><Button>Home <HomeSharp/> </Button></NavLink>\r\n            \r\n            {props.currUser.role === 'ADMIN' ? <NavLink to=\"/control\"><Button>Users<GroupIcon /></Button></NavLink>:null}\r\n            <Button name=\"LogOut\" onClick={()=>{props.clearToken()}}>Log Out<ExitToAppIcon/></Button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n    \r\n\r\n\r\n}","import React,{ useState} from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nimport styl from './../userboard/userprofiles/UserProfiles.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { Button, Select, TextField } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { fetchUsers } from '../../apiCalls/apiCalls';\r\n\r\n\r\n\r\n\r\nfunction UserBox(props) {\r\n     \r\n    const [operation, setOperation] = useState(\"NONE\");\r\n    const [name, setName] = useState(props.user.name);\r\n    const [mail, setMail] = useState(props.user.email);\r\n    const [role, setRole] = useState(props.user.role);\r\n  \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(operation === 'EDIT'){\r\n            const changeUserResult = await fetchUsers(\r\n                \"PATCH\", [{name,email:mail,role},{name:props.user.name,email:props.user.email,role:props.user.role}]\r\n            )\r\n\r\n            if(changeUserResult===false){\r\n                alert(\"duplicate user\")\r\n            }\r\n            fetchUsers(\"POST\").then((result)=>{\r\n            \r\n            props.setUsers(result) })\r\n            setOperation(\"NONE\")\r\n         \r\n        \r\n        \r\n      }\r\n      else if(operation === 'DELETE'){\r\n        const changeUserResult = await fetchUsers(\r\n            \"DELETE\", {name:props.user.name,email:props.user.email,role:props.user.role}\r\n        )\r\n\r\n        if(changeUserResult===false){\r\n            alert(\"profile not deleted\")\r\n        }\r\n        fetchUsers().then((result)=>{\r\n            setOperation(\"NONE\")\r\n            props.setUsers(result)\r\n            \r\n          })\r\n    \r\n    \r\n  }\r\n\r\n    }\r\n\r\n    \r\n\r\n   if(props.currUser.role === 'ADMIN'){\r\n    //\r\n    const questionButtons = [(<Button type=\"submit\" name=\"okay\">Okay<CheckIcon/></Button>),(<Button value=\"NONE\" onClick={e => setOperation(\"NONE\")}> Cancel<CancelIcon/></Button>),null,null]\r\n    const defaultButtons =[null,null,(<Button value=\"EDIT\" name=\"edit\" onClick={e=>setOperation(\"EDIT\")}>Edit<CreateIcon/></Button>),(<Button value=\"DELETE\" name=\"delete\" onClick={e=>setOperation(\"DELETE\")}>Delete<DeleteIcon/></Button>)]\r\n    \r\n    let chosenButtons = [];\r\n    \r\n    if(operation ===\"NONE\") chosenButtons=defaultButtons    \r\n    else chosenButtons=questionButtons\r\n\r\n    let boxValues = []\r\n\r\n    const inputAreas =[(<TextField value={name} name=\"name\" id=\"name\" label=\"name\"  onChange={e => setName(e.target.value)}/>),(<TextField value={mail} onChange={e => setMail(e.target.value)}/>),( <Select id=\"roles\"  value={role} onChange={(e) => setRole(e.target.value)} name=\"roles\"><option value=\"USER\">user</option><option value=\"ADMIN\">admin</option></Select>)]\r\n    const defaultNames=[(props.user? props.user.name: \"Loading\"),(props.user ? props.user.email: \"Loading\"),( props.user ? props.user.role: \"Loading\")]\r\n\r\n    if(operation ===\"EDIT\") boxValues=inputAreas\r\n    else boxValues=defaultNames\r\n    //\r\n  return(<div className={styl.box}>\r\n        {operation===\"NONE\"?<p>\r\n        <NavLink name=\"user\" to={{\r\n   pathname:'/userprofiles',\r\n   state: {wantedProfile:props.user.email}  \r\n }}><img alt={\"\"} src='http://mymbs.co.id/public/upload/image/user/user.png'></img></NavLink></p>:null}\r\n    <form onSubmit={handleSubmit} >\r\n    <span label=\"name\" name=\"name\">Name: {boxValues[0]}</span>\r\n    <span>Mail: {boxValues[1]}</span>\r\n    <span className={styl.roleSelect}>Role: {boxValues[2]}</span>\r\n    {operation===\"DELETE\" ? (<span>Are You sure?<br/></span>) : null}\r\n    <div>\r\n    {chosenButtons}\r\n    </div>\r\n    </form>\r\n</div>\r\n  );\r\n   }\r\n   else return (<span>You have no access to this data.</span>)\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => ({\r\n    currUser:state.authData.currUser\r\n\r\n})\r\n\r\nlet UserBoxHOC =connect(mapStateToProps,{})(UserBox)\r\nexport default UserBoxHOC\r\n","import React, { useEffect, useState } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport UserBoxHOC from './UserBox';\r\nimport styl from './../userboard/userprofiles/UserProfiles.module.css'\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport { fetchUsers } from '../../apiCalls/apiCalls';\r\n\r\n\r\n\r\n\r\n function ControlPanel(props) {\r\n  \r\n   const [Users,setUsers]=useState();\r\n   useEffect(()=>{\r\n     setUsers([])\r\n      const getUserList = fetchUsers(\"POST\").then(result =>{\r\n\r\n        setUsers(result)\r\n\r\n\r\n      })\r\n\r\n   },[])\r\n   if(props.currUser.role === 'ADMIN' && Users){\r\n     \r\n     let UserList = [...Users].map((e,i) => <UserBoxHOC key={Users[i]._id} setUsers={setUsers} user={Users[i]}/>)\r\n  return(<div>\r\n    \r\n   \r\n    <Dashboard/>\r\n    <div className={styl.boxGrid}>{UserList}</div>\r\n    </div>\r\n  );\r\n   }\r\n   else return (<span>You have no access to this page.</span>)\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  currUser:state.authData.currUser\r\n\r\n})\r\n\r\nlet ControlPanelHOC =connect(mapStateToProps,{})(ControlPanel)\r\nexport default ControlPanelHOC","import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { loginUser, regUser,getProfiles } from \"../../apiCalls/apiCalls\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setUserAC, setProfilesAC } from \"../../redux/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\nimport FormikMaterialTextField from \"./common/FormikMaterialTextField\";\r\nimport styl from \"./styles/Login.module.css\";\r\nimport { Button, Radio } from \"@material-ui/core\";\r\nimport { OfflinePinSharp } from '@material-ui/icons/'\r\n\r\n\r\nfunction validate (values,operation){\r\n    const errors={};\r\n    if (!values.email) {\r\n     errors.email = 'Required';\r\n   } else if (\r\n     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n   ) {\r\n     errors.email = 'Invalid email address';\r\n   }\r\n   if (!values.password){\r\n    errors.password = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-]{2,}$/i.test(values.password)\r\n  ) {\r\n    errors.password = 'Invalid password';\r\n  }\r\n  if (!values.name && operation===\"Register\"){\r\n    errors.name = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-]{2,}$/i.test(values.name) && operation===\"Register\"\r\n  ) {\r\n    errors.name = 'Invalid name';\r\n  }\r\n   return errors;\r\n}\r\n\r\nasync function authProcess(user,props,operation){\r\n    \r\n        console.log(user)\r\n      if (operation === \"Register\") {\r\n          const regResponse = await regUser(\r\n      {\r\n        username: user.email,\r\n        password: user.password,\r\n        role:\"USER\",\r\n        name: user.name\r\n      },\r\n      \"POST\"\r\n    );\r\n      console.log(regResponse)\r\n    if (regResponse === false) {\r\n      alert(\"Email already registered\");\r\n    }\r\n  }\r\n  const token = await loginUser(\r\n    {\r\n      username: user.email,\r\n      password:user.password,\r\n    },\r\n    \"POST\"\r\n  );\r\n  if (token[0].token) {\r\n    props.setToken(token[0]);\r\n    props.setUserAC({\r\n      email: user.email,\r\n      role: token[1],\r\n      token: token,\r\n    });\r\n    getProfiles(user.email).then((result) => {\r\n      props.setProfilesAC(result);\r\n    });\r\n  } else {\r\n    alert(\"Login failed\");\r\n  }\r\n  \r\n    }\r\n\r\n\r\n\r\n\r\nconst AuthForm = (props) => {\r\n  const [operation, setOperation] = useState(\"Login\");\r\n  return (\r\n    <Formik className={styl.formikWrap}\r\n      initialValues={{ email: \"\", password: \"\", name: \"\" }}\r\n      validate={(values)=>validate(values,operation)}\r\n      onSubmit={ async (user) => authProcess(user,{...props},operation) }\r\n    >\r\n      \r\n        \r\n          <Form className={styl.formikForm}>\r\n            <div>\r\n            Email:<br/>\r\n            <FormikMaterialTextField name=\"email\" /><br/>\r\n  \r\n            </div>\r\n\r\n            <div>\r\n            Password:<br/>\r\n            <FormikMaterialTextField name=\"password\" /><br/>\r\n         \r\n            </div>\r\n\r\n            <div>\r\n            <label>\r\n              <Radio\r\n                type=\"radio\"\r\n                onChange={(e) => setOperation(\"Register\")}\r\n                checked={operation === \"Register\"}\r\n                name=\"radio\"\r\n                value=\"sign up\"\r\n              />\r\n              Sign up\r\n              \r\n            </label>\r\n\r\n\r\n            <label>\r\n              <Radio\r\n                type=\"radio\"\r\n                onChange={(e) => setOperation(\"Login\")}\r\n                checked={operation === \"Login\"}\r\n                name=\"radio\"\r\n                value=\"sign in\"\r\n              />\r\n              Sign in\r\n            </label>\r\n            </div>\r\n            {operation === \"Register\" ?( \r\n                <div>\r\n            Name:<br/>\r\n            <FormikMaterialTextField name=\"name\" /><br/>\r\n            </div>)\r\n            :null\r\n            }\r\n            <Button type=\"submit\"> <OfflinePinSharp />  </Button>\r\n          </Form>\r\n        \r\n\r\n    </Formik>\r\n  );\r\n};\r\n\r\nAuthForm.propTypes = {\r\n    setToken: PropTypes.func.isRequired,\r\n  };\r\n  \r\n  let mapStateToProps = (state, ownProps) => ({\r\n    setToken: ownProps.setToken,\r\n  });\r\n\r\n  let AuthFormHOC = connect(mapStateToProps, { setUserAC, setProfilesAC })(AuthForm);\r\nexport default AuthFormHOC;","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Dashboard from './components/dashboard/Dashboard';\nimport useToken from './hooks/useToken';\nimport Userboard,{AdminUserboard} from './components/userboard/Userboard';\nimport {connect } from 'react-redux';\nimport { setTokenAC, setUserAC, setProfilesAC } from './redux/actionCreators';\nimport Header from './components/header/Header';\nimport ControlPanelHOC from './components/controlpanel/ControlPanel';\nimport AuthFormHOC from './components/forms/LoginForm';\nimport { getProfiles, loadUserFromToken } from './apiCalls/apiCalls';\n\n\n\n\nfunction AppMain(props) {\n \n  const { token, setToken, clearToken, renewToken, getToken } = useToken();\n  useEffect(()=>{\n      if(token){\n      loadUserFromToken(getToken()).then((result)=>{\n        if(!result.token){\n          clearToken()\n        }\n        else{\n          props.setUserAC(result)\n          props.setTokenAC(renewToken(result.token,result.email))\n        }\n      })\n\n      \n    }\n      },[]\n  )\n \n  if (token && token.expiry < (new Date()).getTime()) {\n    clearToken()\n  }\n  if(!token ) {\n    \n    return <AuthFormHOC  setToken={setToken} />\n  }\n  else{\n\n    \n  return (\n    \n      <div className=\"wrapper\">\n        \n        \n        <BrowserRouter>\n          <Header currUser={props.state.authData.currUser} clearToken={clearToken}/>\n          <Switch>\n          <Route exact path=\"/\">\n              <Userboard  state={props.state}  clearToken={clearToken} />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/control\">\n              <ControlPanelHOC />\n            </Route>\n            <Route path=\"/userprofiles\">\n              <AdminUserboard />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n        \n      </div>\n      \n    );\n  }\n}\n\nlet mapStateToProps = (state) =>({\n  state:state\n})\n\nconst App = connect(mapStateToProps,{setUserAC,setTokenAC,setProfilesAC})(AppMain)\nexport default App;\n","import { useState } from 'react';\r\nimport { loginUser } from '../apiCalls/apiCalls.js';\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken);\r\n  };\r\n  const deleteToken = () => {\r\n      localStorage.removeItem('token');\r\n      setToken();\r\n  }\r\n  const renewToken = (token,email)=>{\r\n    loginUser({email},\"PUT\").then((result)=>{\r\n        setToken(result)\r\n        localStorage.setItem('token', JSON.stringify(result));\r\n\r\n        return result\r\n    })\r\n}\r\n  return {\r\n    \r\n    setToken: saveToken,\r\n    clearToken: deleteToken,\r\n    renewToken: renewToken,\r\n    getToken: getToken,\r\n    token\r\n  }\r\n\r\n\r\n}","const SET_USER = \"SET-USER\"\r\nconst SET_TOKEN = \"SET-TOKEN\"\r\n\r\nexport let defaultUsers = {\r\n\r\n    currUser:{\r\n        email:\"testmail\"\r\n            },\r\n            \r\n}\r\n\r\n\r\n\r\nexport const authReducer = (state=defaultUsers,action)=>{\r\n    \r\n    \r\n    switch(action.type){\r\n        case SET_USER:\r\n\r\n            \r\n            \r\n                return({\r\n                    ...state,currUser: action.user\r\n                })\r\n                \r\n        case SET_TOKEN:\r\n\r\n                        return({\r\n                            ...state,currUser: {...state.currUser,token:{...action.token}}\r\n                        })\r\n                    \r\n        default:\r\n            return state\r\n\r\n    }\r\n    \r\n    \r\n\r\n\r\n}\r\nexport default authReducer;","const SET_PROFILES = \"SET-PROFILES\"\r\n\r\nlet defaultProfiles = {\r\n\r\n    currProfiles:[]\r\n            \r\n            \r\n           \r\n            \r\n          \r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport const profileReducer = (state=defaultProfiles,action)=>{\r\n    \r\n   \r\n    switch(action.type){\r\n        case SET_PROFILES:\r\n\r\n                return({\r\n                    ...state,currProfiles: [...action.profiles]\r\n                })\r\n            \r\n        default:\r\n            return state\r\n\r\n    }\r\n    \r\n    \r\n\r\n\r\n}\r\nexport default profileReducer;","import { combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport profileReducer from \"./profilesReducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    authData: authReducer,\r\n    profileData: profileReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\n\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from  './redux/redux-store'\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <App state={store.getState()} dispatch={store.dispatch.bind(store)} />\n  </Provider>\n  ,\n  document.getElementById('root')\n  \n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Userboard\":\"UserProfiles_Userboard__2aU5Z\",\"addButton\":\"UserProfiles_addButton__Kvj31\",\"boxGrid\":\"UserProfiles_boxGrid__yR2QL\",\"box\":\"UserProfiles_box__uECKc\",\"roleSelect\":\"UserProfiles_roleSelect__3M-IR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__DlE4a\",\"User\":\"Header_User__sI2_r\",\"adminPhoto\":\"Header_adminPhoto__1yISi\",\"userPhoto\":\"Header_userPhoto__2M3EZ\",\"Buttons\":\"Header_Buttons__1Oqka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formikWrap\":\"Login_formikWrap__2zAfX\",\"formikForm\":\"Login_formikForm__1lWvK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard_Dashboard__3nbQf\"};"],"sourceRoot":""}