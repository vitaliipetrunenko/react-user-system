{"version":3,"sources":["apiCalls/apiCalls.js","components/dashboard/Dashboard.jsx","redux/actionCreators.js","components/userboard/userprofiles/ProfileBox.jsx","components/forms/common/FormikMaterialTextField.jsx","components/forms/ProfileForm.jsx","components/userboard/userprofiles/UserProfiles.jsx","components/userboard/Userboard.jsx","components/header/Header.jsx","components/controlpanel/UserBox.jsx","components/controlpanel/ControlPanel.jsx","components/forms/LoginForm.jsx","App.js","hooks/useToken.js","redux/authReducer.js","redux/profilesReducer.js","redux/redux-store.js","index.js","components/userboard/userprofiles/UserProfiles.module.css","components/header/Header.module.css","components/forms/styles/Login.module.css","components/dashboard/Dashboard.module.css"],"names":["loginUser","credentials","method","a","fetch","headers","body","JSON","stringify","then","data","json","regUser","token","catch","err","loadUserFromToken","fetchUser","result","getProfiles","email","profileChange","profile","fetchUsers","user","Dashboard","useState","users","profiles","matureProfiles","stats","setStats","useEffect","res","className","styl","setUserAC","User","type","setProfilesAC","ProfileBoxHOC","connect","state","ownProps","props","operation","setOperation","name","setName","surname","setSurname","age","setAge","handleSubmit","e","preventDefault","author","alert","currUser","questionButtons","Button","value","onClick","defaultButtons","chosenButtons","boxValues","inputAreas","TextField","id","label","onChange","target","parseInt","defaultNames","box","alt","src","onSubmit","FormikMaterialTextField","formik","useFormikContext","console","log","errors","error","values","onInput","handleChange","onBlur","handleBlur","helperText","InputLabelProps","shrink","profileProcess","setProfilesACprop","ProfileFormHOC","initialValues","validate","test","OfflinePinSharp","HocUserProfiles","authData","profileList","profileData","currProfiles","username","userboxes","map","el","_id","Userboard","boxGrid","AdminUserboard","location","useLocation","wantedUser","setWantedUser","wantedProfile","Header","role","adminPhoto","userPhoto","Buttons","to","pathname","HomeSharp","clearToken","UserBoxHOC","mail","setMail","setRole","setUsers","Select","roleSelect","ControlPanelHOC","Users","UserList","i","authProcess","password","setToken","AuthFormHOC","formikWrap","formikForm","data-testid","Radio","checked","App","setTokenAC","getToken","tokenString","localStorage","getItem","parse","userToken","setItem","removeItem","renewToken","useToken","expiry","Date","getTime","exact","path","SET_USER","SET_TOKEN","defaultUsers","authReducer","action","SET_PROFILES","defaultProfiles","profileReducer","reducers","combineReducers","store","createStore","ReactDOM","render","getState","dispatch","bind","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dbef7fa5.chunk.js","sourcesContent":["export async function loginUser(credentials, method) {\r\n    return fetch(\"/api/login\", {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    }).then((data) => data.json());\r\n  }\r\n  \r\n  export async function regUser(credentials, method) {\r\n    return fetch(\"/api/register\", {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    }).then((data) => data.json());\r\n  }\r\n\r\n export async function fetchUser(token) {\r\n\r\n    return fetch('/api/login', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(token)\r\n    })\r\n      .then(data => data.json()).catch(err =>{return err})\r\n   }\r\n  \r\n export function loadUserFromToken(token){\r\n    return fetchUser(token).then((result,err)=>{\r\n      \r\n      if (!err){\r\n  \r\n      \r\n      return result\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n      \r\n      \r\n    })\r\n  \r\n    \r\n  }\r\n  \r\n  export async function  getProfiles(email){\r\n    return fetch('/api/profiles', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({email:email})\r\n    })\r\n      .then(data => data.json())\r\n  }\r\n  \r\n  export async function profileChange(profile,method) {\r\n    return fetch('/api/profiles', {\r\n      method: method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(profile)\r\n    })\r\n      .then(data => data.json())\r\n   }\r\n\r\n   export function  getStats(){\r\n    return fetch('/api/stats',{method:\"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body:null\r\n  }).then(data => \r\n        data.json())\r\n  }\r\n\r\n  export async function fetchUsers(method,user=null) {\r\n \r\n    return fetch('/api/admin', {\r\n      method: method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({user})\r\n    })\r\n      .then(data => data.json()).catch(err =>{return err})\r\n   }","import React, { useEffect, useState } from \"react\";\r\nimport { getStats } from \"../../apiCalls/apiCalls\";\r\nimport styl from \"./Dashboard.module.css\";\r\n\r\nexport default function Dashboard() {\r\n  const [stats, setStats] = useState({\r\n    users: 0,\r\n    profiles: 0,\r\n    matureProfiles: 0,\r\n  });\r\n  useEffect(() => {\r\n    getStats().then((res) => {\r\n      setStats({ users: res[0], profiles: res[1], matureProfiles: res[2] });\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className={styl.Dashboard}>\r\n      <div>\r\n        <h2>Dashboard</h2>\r\n      </div>\r\n      <div>\r\n        Users:\r\n        <br />\r\n        <span>{stats.users}</span>\r\n      </div>{\" \"}\r\n      <div>\r\n        Profiles:\r\n        <br /> <span>{stats.profiles}</span>\r\n      </div>{\" \"}\r\n      <div>\r\n        Profiles over 18:\r\n        <br /> <span>{stats.matureProfiles}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const setUserAC = (User) => ({type:\"SET-USER\",user:User});\r\nexport const setProfilesAC = (profiles) => ({type:\"SET-PROFILES\",profiles:profiles});\r\nexport const setTokenAC = (token) => ({type:\"SET-TOKEN\",token:token});\r\n\r\n\r\n","import { Button, TextField } from '@material-ui/core';\r\nimport React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { getProfiles,profileChange } from '../../../apiCalls/apiCalls';\r\nimport {setProfilesAC} from '../../../redux/actionCreators'\r\nimport styl from './UserProfiles.module.css'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n function ProfileBox(props) {\r\n    const [operation, setOperation] = useState(\"NONE\");\r\n    const [name, setName] = useState(props.name);\r\n    const [surname, setSurname] = useState(props.surname);\r\n    const [age, setAge] = useState(props.age);\r\n    \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(operation === 'EDIT'){\r\n            const changeProfileResult = await profileChange(\r\n                [{name,surname,age,author:props.author},{name:props.name,surname:props.surname,age:props.age,author:props.author}],\"PATCH\"\r\n            )\r\n            if(changeProfileResult===false){\r\n                alert(\"duplicate profile\")\r\n            }\r\n        getProfiles(props.currUser).then((result)=>{\r\n            props.setProfilesAC(result)\r\n            setOperation(\"NONE\")\r\n          })\r\n      }\r\n      else if(operation === 'DELETE'){\r\n        const changeProfileResult = await profileChange(\r\n            {name:props.name,surname:props.surname,age:props.age,author:props.author},\"DELETE\"\r\n        )\r\n        if(changeProfileResult===false){\r\n            alert(\"profile not deleted\")\r\n        }\r\n    getProfiles(props.currUser).then((result)=>{\r\n        props.setProfilesAC(result)\r\n        setOperation(\"NONE\")\r\n      })\r\n  }\r\n\r\n    }\r\n    const questionButtons = [(<Button type=\"submit\" name=\"okay\">Okay<CheckIcon/></Button>),(<Button value=\"NONE\" onClick={e => setOperation(\"NONE\")}>Cancel<CancelIcon/> </Button>),null,null]\r\n    const defaultButtons =[null,null,(<Button value=\"EDIT\" name=\"edit\" onClick={e=>setOperation(\"EDIT\")}>Edit<CreateIcon/></Button>),(<Button value=\"DELETE\" name=\"delete\" onClick={e=>setOperation(\"DELETE\")}>Delete<DeleteIcon/></Button>)]\r\n    \r\n    let chosenButtons = [];\r\n    \r\n    if(operation ===\"NONE\") chosenButtons=defaultButtons    \r\n    else chosenButtons=questionButtons\r\n\r\n    let boxValues = []\r\n\r\n    const inputAreas =[(<TextField value={name} id=\"name\" name=\"name\" label=\"name\" onChange={e => setName(e.target.value)}/>),(<TextField value={surname} onChange={e => setSurname(e.target.value)}/>),(<TextField type=\"number\" value={age} onChange={e => setAge(parseInt(e.target.value))}/>)]\r\n    const defaultNames=[(props.name ? props.name: \"Loading\"),(props.surname ? props.surname: \"Loading\"),(props.age ? props.age: \"Loading\")]\r\n\r\n    if(operation ===\"EDIT\") boxValues=inputAreas\r\n    else boxValues=defaultNames\r\n\r\n    return(\r\n        <div className={styl.box}>\r\n        \r\n            {operation===\"NONE\"?<p><a><img alt={\"\"} src='http://mymbs.co.id/public/upload/image/user/user.png'></img></a></p> :null}\r\n            <form onSubmit={handleSubmit} >\r\n            <span name=\"name\" label=\"name\">Name: {boxValues[0]}</span>\r\n            <span>Surname: {boxValues[1]}</span>\r\n            <span>Age: {boxValues[2]}</span>\r\n            {operation===\"DELETE\" ? (<span>Are You sure?<br/></span>) : null}\r\n            <div>\r\n            {chosenButtons}\r\n            </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => ({\r\n\r\n}) \r\n\r\nlet ProfileBoxHOC = connect(mapStateToProps,{setProfilesAC})(ProfileBox)\r\nexport default  ProfileBoxHOC;\r\n","import React from 'react'\r\nimport {useFormikContext} from 'formik'\r\nimport {TextField} from '@material-ui/core'\r\n\r\n\r\n\r\nfunction FormikMaterialTextField(props) {\r\n    const formik = useFormikContext()\r\n    const {name} = props\r\nconsole.log(formik.errors)\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            error={!!formik.errors[name]}\r\n            value={formik.values[name]}\r\n            onInput={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            helperText={formik.errors[name]}\r\n            InputLabelProps={{shrink: false}}        />\r\n    )\r\n}\r\n\r\nexport default FormikMaterialTextField\r\n","import React from \"react\";\r\nimport { Formik, Form} from \"formik\";\r\nimport {getProfiles, profileChange } from \"../../apiCalls/apiCalls\";\r\nimport { connect } from \"react-redux\";\r\nimport FormikMaterialTextField from \"./common/FormikMaterialTextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { OfflinePinSharp } from '@material-ui/icons/'\r\nimport { setProfilesAC } from './../../redux/actionCreators'\r\n\r\n\r\nfunction validate (values,operation){\r\n    const errors={};\r\n    if (!values.name) {\r\n     errors.name = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-]{2,}$/i.test(values.name)\r\n   ) {\r\n     errors.name = 'Invalid name';\r\n   }\r\n   if (!values.surname){\r\n    errors.surname = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-0-9]{2,}$/i.test(values.surname)\r\n  ) {\r\n    errors.surname = 'Invalid surname';\r\n  }\r\n  if (!values.age){\r\n    errors.age = 'Required';\r\n   } else if (\r\n    !/^[0-9]{1,}$/i.test(values.age)) {\r\n    errors.age = 'Invalid age';\r\n  }\r\n   return errors;\r\n}\r\n\r\nasync function profileProcess(profile,User,setProfilesACprop){\r\n        console.log(\"User:\",User)\r\n        const addProfileResult = await profileChange(\r\n            {name:profile.name,surname:profile.surname,age:profile.age,author:User},\"PUT\"\r\n        )\r\n        if(addProfileResult===false){\r\n            alert(\"duplicate profile\")\r\n        }\r\n        getProfiles(User).then((result)=>{\r\n            setProfilesACprop(result)\r\n          })\r\n}\r\n\r\nconst ProfileForm = (props) => {\r\n  \r\n  return (\r\n    <Formik \r\n      initialValues={{ name: \"\", surname: \"\", age: \"\" }}\r\n      validate={(values)=>validate(values)}\r\n      onSubmit={ async (profile) => profileProcess(profile,props.User,props.setProfilesAC)}\r\n    >\r\n      \r\n        \r\n          <Form>\r\n            <div>\r\n            Name:<br/>\r\n            <FormikMaterialTextField name=\"name\" /><br/>\r\n  \r\n            </div>\r\n\r\n            <div>\r\n            Surname:<br/>\r\n            <FormikMaterialTextField name=\"surname\" /><br/>\r\n         \r\n            </div>\r\n\r\n            <div>\r\n            Age:<br/>\r\n            <FormikMaterialTextField type=\"number\" name=\"age\" /><br/>\r\n         \r\n            </div> \r\n           \r\n            <Button type=\"submit\"> <OfflinePinSharp />  </Button>\r\n          </Form>\r\n        \r\n\r\n    </Formik>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n    state: state,\r\n  });\r\n  let ProfileFormHOC = connect(mapStateToProps, { setProfilesAC })(ProfileForm);\r\nexport default ProfileFormHOC;","import { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { setProfilesAC } from \"./../../../redux/actionCreators\";\r\nimport { getProfiles } from \"../../../apiCalls/apiCalls\";\r\nimport styl from \"./UserProfiles.module.css\";\r\nimport ProfileBoxHOC from \"./ProfileBox\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ProfileFormHOC from \"../../forms/ProfileForm\";\r\n\r\nfunction UserProfiles(props) {\r\n  const [operation, setOperation] = useState();\r\n\r\n  let username = props.User ? props.User : props.currUser.email;\r\n\r\n  useEffect(() => {\r\n    props.setProfilesAC([]);\r\n\r\n    getProfiles(username).then((profiles) => {\r\n      console.log(\"setting from userProfiles\");\r\n      props.setProfilesAC(profiles);\r\n    });\r\n  }, [username]);\r\n\r\n  let userboxes = [...props.profileList].map((el) => (\r\n    <ProfileBoxHOC\r\n      key={el._id}\r\n      currUser={username}\r\n      name={el.name}\r\n      surname={el.surname}\r\n      age={el.age}\r\n      author={el.author}\r\n    />\r\n  ));\r\n  return (\r\n    <div className=\"contentBlock\">\r\n      <div className={styl.Userboard}>\r\n        <div name=\"Greeting\">\r\n          Welcome, {props.currUser.email}!<br />\r\n          Browsing, {username} profiles{\" \"}\r\n        </div>\r\n\r\n        {operation === \"ADD\" ? (\r\n          <div>\r\n            <ProfileFormHOC User={username}></ProfileFormHOC>\r\n            <Button\r\n              onClick={() => {\r\n                setOperation(\"NONE\");\r\n              }}\r\n            >\r\n              <CancelIcon />\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <Button id=\"ADD\" value=\"ADD\" onClick={(e) => setOperation(\"ADD\")}>\r\n            {\" \"}\r\n            Add Profile <CreateIcon />\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div className={styl.boxGrid}>{userboxes}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    currUser: state.authData.currUser,\r\n    profileList: state.profileData.currProfiles,\r\n  };\r\n};\r\n\r\nlet HocUserProfiles = connect(mapStateToProps, { setProfilesAC })(UserProfiles);\r\nexport default HocUserProfiles;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HocUserProfiles from \"./userprofiles/UserProfiles\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function Userboard(props) {\r\n  return (\r\n    <div>\r\n      <HocUserProfiles\r\n        User={\r\n          props.state.authData.currUser\r\n            ? props.state.authData.currUser.email\r\n            : null\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function AdminUserboard(props) {\r\n  let location = useLocation();\r\n  console.log(location);\r\n  const [wantedUser, setWantedUser] = useState();\r\n  useEffect(() => {\r\n    setWantedUser(location.state.wantedProfile);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <HocUserProfiles User={wantedUser ? wantedUser : null} />\r\n    </div>\r\n  );\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport { HomeSharp } from \"@material-ui/icons\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styl from \"./Header.module.css\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <div className={styl.Header}>\r\n      <div className={styl.User}>\r\n        <img\r\n          className={\r\n            props.currUser.role === \"ADMIN\" ? styl.adminPhoto : styl.userPhoto\r\n          }\r\n          alt={\"\"}\r\n          src={\"http://mymbs.co.id/public/upload/image/user/user.png\"}\r\n        ></img>\r\n        <p>{props.currUser.email}</p>\r\n      </div>\r\n      <div className={styl.Buttons}>\r\n        <NavLink\r\n          to={{\r\n            pathname: \"/\",\r\n            state: { wantedProfile: props.currUser.email },\r\n          }}\r\n        >\r\n          <Button>\r\n            Home <HomeSharp />{\" \"}\r\n          </Button>\r\n        </NavLink>\r\n\r\n        {props.currUser.role === \"ADMIN\" ? (\r\n          <NavLink to=\"/control\">\r\n            <Button>\r\n              Users\r\n              <GroupIcon />\r\n            </Button>\r\n          </NavLink>\r\n        ) : null}\r\n        <Button\r\n          name=\"LogOut\"\r\n          onClick={() => {\r\n            props.clearToken();\r\n          }}\r\n        >\r\n          Log Out\r\n          <ExitToAppIcon />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styl from \"./../userboard/userprofiles/UserProfiles.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button, Select, TextField } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { fetchUsers } from \"../../apiCalls/apiCalls\";\r\n\r\nfunction UserBox(props) {\r\n  const [operation, setOperation] = useState(\"NONE\");\r\n  const [name, setName] = useState(props.user.name);\r\n  const [mail, setMail] = useState(props.user.email);\r\n  const [role, setRole] = useState(props.user.role);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (operation === \"EDIT\") {\r\n      const changeUserResult = await fetchUsers(\"PATCH\", [\r\n        { name, email: mail, role },\r\n        {\r\n          name: props.user.name,\r\n          email: props.user.email,\r\n          role: props.user.role,\r\n        },\r\n      ]);\r\n\r\n      if (changeUserResult === false) {\r\n        alert(\"duplicate user\");\r\n      }\r\n      fetchUsers(\"POST\").then((result) => {\r\n        props.setUsers(result);\r\n      });\r\n      setOperation(\"NONE\");\r\n    } else if (operation === \"DELETE\") {\r\n      const changeUserResult = await fetchUsers(\"DELETE\", {\r\n        name: props.user.name,\r\n        email: props.user.email,\r\n        role: props.user.role,\r\n      });\r\n\r\n      if (changeUserResult === false) {\r\n        alert(\"profile not deleted\");\r\n      }\r\n      fetchUsers().then((result) => {\r\n        setOperation(\"NONE\");\r\n        props.setUsers(result);\r\n      });\r\n    }\r\n  };\r\n\r\n  if (props.currUser.role === \"ADMIN\") {\r\n    const questionButtons = [\r\n      <Button type=\"submit\" name=\"okay\">\r\n        Okay\r\n        <CheckIcon />\r\n      </Button>,\r\n      <Button value=\"NONE\" onClick={(e) => setOperation(\"NONE\")}>\r\n        {\" \"}\r\n        Cancel\r\n        <CancelIcon />\r\n      </Button>,\r\n      null,\r\n      null,\r\n    ];\r\n    const defaultButtons = [\r\n      null,\r\n      null,\r\n      <Button value=\"EDIT\" name=\"edit\" onClick={(e) => setOperation(\"EDIT\")}>\r\n        Edit\r\n        <CreateIcon />\r\n      </Button>,\r\n      <Button\r\n        value=\"DELETE\"\r\n        name=\"delete\"\r\n        onClick={(e) => setOperation(\"DELETE\")}\r\n      >\r\n        Delete\r\n        <DeleteIcon />\r\n      </Button>,\r\n    ];\r\n\r\n    let chosenButtons = [];\r\n\r\n    if (operation === \"NONE\") chosenButtons = defaultButtons;\r\n    else chosenButtons = questionButtons;\r\n\r\n    let boxValues = [];\r\n\r\n    const inputAreas = [\r\n      <TextField\r\n        value={name}\r\n        name=\"name\"\r\n        id=\"name\"\r\n        label=\"name\"\r\n        onChange={(e) => setName(e.target.value)}\r\n      />,\r\n      <TextField value={mail} onChange={(e) => setMail(e.target.value)} />,\r\n      <Select\r\n        id=\"roles\"\r\n        value={role}\r\n        onChange={(e) => setRole(e.target.value)}\r\n        name=\"roles\"\r\n      >\r\n        <option value=\"USER\">user</option>\r\n        <option value=\"ADMIN\">admin</option>\r\n      </Select>,\r\n    ];\r\n    const defaultNames = [\r\n      props.user ? props.user.name : \"Loading\",\r\n      props.user ? props.user.email : \"Loading\",\r\n      props.user ? props.user.role : \"Loading\",\r\n    ];\r\n\r\n    if (operation === \"EDIT\") boxValues = inputAreas;\r\n    else boxValues = defaultNames;\r\n\r\n    return (\r\n      <div className={styl.box}>\r\n        {operation === \"NONE\" ? (\r\n          <p>\r\n            <NavLink\r\n              name=\"user\"\r\n              to={{\r\n                pathname: \"/userprofiles\",\r\n                state: { wantedProfile: props.user.email },\r\n              }}\r\n            >\r\n              <img\r\n                alt={\"\"}\r\n                src=\"http://mymbs.co.id/public/upload/image/user/user.png\"\r\n              ></img>\r\n            </NavLink>\r\n          </p>\r\n        ) : null}\r\n        <form onSubmit={handleSubmit}>\r\n          <span label=\"name\" name=\"name\">\r\n            Name: {boxValues[0]}\r\n          </span>\r\n          <span>Mail: {boxValues[1]}</span>\r\n          <span className={styl.roleSelect}>Role: {boxValues[2]}</span>\r\n          {operation === \"DELETE\" ? (\r\n            <span>\r\n              Are You sure?\r\n              <br />\r\n            </span>\r\n          ) : null}\r\n          <div>{chosenButtons}</div>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else return <span>You have no access to this data.</span>;\r\n}\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n  currUser: state.authData.currUser,\r\n});\r\n\r\nlet UserBoxHOC = connect(mapStateToProps, {})(UserBox);\r\nexport default UserBoxHOC;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UserBoxHOC from \"./UserBox\";\r\nimport styl from \"./../userboard/userprofiles/UserProfiles.module.css\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport { fetchUsers } from \"../../apiCalls/apiCalls\";\r\n\r\nfunction ControlPanel(props) {\r\n  const [Users, setUsers] = useState();\r\n  useEffect(() => {\r\n    setUsers([]);\r\n    const getUserList = fetchUsers(\"POST\").then((result) => {\r\n      setUsers(result);\r\n    });\r\n  }, []);\r\n  if (props.currUser.role === \"ADMIN\" && Users) {\r\n    let UserList = [...Users].map((e, i) => (\r\n      <UserBoxHOC key={Users[i]._id} setUsers={setUsers} user={Users[i]} />\r\n    ));\r\n    return (\r\n      <div className=\"contentBlock\">\r\n        <Dashboard />\r\n        <div className={styl.boxGrid}>{UserList}</div>\r\n      </div>\r\n    );\r\n  } else return <span>You have no access to this page.</span>;\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  currUser: state.authData.currUser,\r\n});\r\n\r\nlet ControlPanelHOC = connect(mapStateToProps, {})(ControlPanel);\r\nexport default ControlPanelHOC;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { loginUser, regUser,getProfiles } from \"../../apiCalls/apiCalls\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setUserAC, setProfilesAC } from \"../../redux/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\nimport FormikMaterialTextField from \"./common/FormikMaterialTextField\";\r\nimport styl from \"./styles/Login.module.css\";\r\nimport { Button, Radio } from \"@material-ui/core\";\r\nimport { OfflinePinSharp } from '@material-ui/icons/'\r\n\r\n\r\nfunction validate (values,operation){\r\n    const errors={};\r\n    if (!values.email) {\r\n     errors.email = 'Required';\r\n   } else if (\r\n     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n   ) {\r\n     errors.email = 'Invalid email address';\r\n   }\r\n   if (!values.password){\r\n    errors.password = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-]{2,}$/i.test(values.password)\r\n  ) {\r\n    errors.password = 'Invalid password';\r\n  }\r\n  if (!values.name && operation===\"Register\"){\r\n    errors.name = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-]{2,}$/i.test(values.name) && operation===\"Register\"\r\n  ) {\r\n    errors.name = 'Invalid name';\r\n  }\r\n   return errors;\r\n}\r\n\r\nasync function authProcess(user,props,operation){\r\n    \r\n       \r\n      if (operation === \"Register\") {\r\n          const regResponse = await regUser(\r\n      {\r\n        username: user.email,\r\n        password: user.password,\r\n        role:\"USER\",\r\n        name: user.name\r\n      },\r\n      \"POST\"\r\n    );\r\n   \r\n    if (regResponse === false) {\r\n      alert(\"Email already registered\");\r\n    }\r\n  }\r\n  const token = await loginUser(\r\n    {\r\n      username: user.email,\r\n      password:user.password,\r\n    },\r\n    \"POST\"\r\n  );\r\n  if (token[0].token) {\r\n    props.setToken(token[0]);\r\n    props.setUserAC({\r\n      email: user.email,\r\n      role: token[1],\r\n      token: token,\r\n    });\r\n    getProfiles(user.email).then((result) => {\r\n      props.setProfilesAC(result);\r\n    });\r\n  } else {\r\n    alert(\"Login failed\");\r\n  }\r\n  \r\n    }\r\n\r\nconst AuthForm = (props) => {\r\n  const [operation, setOperation] = useState(\"Login\");\r\n  return (\r\n    <Formik className={styl.formikWrap}\r\n      initialValues={{ email: \"\", password: \"\", name: \"\" }}\r\n      validate={(values)=>validate(values,operation)}\r\n      onSubmit={ async (user) => authProcess(user,{...props},operation) }\r\n    > \r\n          <Form className={styl.formikForm}>\r\n            <div>\r\n            Email:<br/>\r\n            <FormikMaterialTextField data-testid=\"emailF\" name=\"email\" /><br/>\r\n  \r\n            </div>\r\n\r\n            <div>\r\n            Password:<br/>\r\n            <FormikMaterialTextField data-testid=\"passF\" name=\"password\" /><br/>\r\n            </div>\r\n            <div>\r\n            <label>\r\n              <Radio\r\n                type=\"radio\" data-testid=\"opChanger\"\r\n                onChange={(e) => setOperation(\"Register\")}\r\n                checked={operation === \"Register\"}\r\n                name=\"radio\"\r\n                value=\"sign up\"\r\n              />\r\n              Sign up\r\n            </label>\r\n\r\n            <label>\r\n              <Radio\r\n                type=\"radio\" \r\n                onChange={(e) => setOperation(\"Login\")}\r\n                checked={operation === \"Login\"}\r\n                name=\"radio\"\r\n                value=\"sign in\"\r\n              />\r\n              Sign in\r\n            </label>\r\n            </div>\r\n            {operation === \"Register\" ?( \r\n                <div>\r\n            Name:<br/>\r\n            <FormikMaterialTextField name=\"name\" data-testid=\"nameF\"/><br/>\r\n            </div>)\r\n            :null\r\n            }\r\n            <Button data-testid=\"submitter\" type=\"submit\"> <OfflinePinSharp />  </Button>\r\n          </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nAuthForm.propTypes = {\r\n    setToken: PropTypes.func.isRequired,\r\n  };\r\n  let mapStateToProps = (state, ownProps) => ({\r\n    setToken: ownProps.setToken,\r\n  });\r\n  let AuthFormHOC = connect(mapStateToProps, { setUserAC, setProfilesAC })(AuthForm);\r\nexport default AuthFormHOC;","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport useToken from \"./hooks/useToken\";\nimport Userboard, { AdminUserboard } from \"./components/userboard/Userboard\";\nimport { connect } from \"react-redux\";\nimport { setTokenAC, setUserAC, setProfilesAC } from \"./redux/actionCreators\";\nimport Header from \"./components/header/Header\";\nimport ControlPanelHOC from \"./components/controlpanel/ControlPanel\";\nimport AuthFormHOC from \"./components/forms/LoginForm\";\nimport { getProfiles, loadUserFromToken } from \"./apiCalls/apiCalls\";\n\nfunction AppMain(props) {\n  const { token, setToken, clearToken, renewToken, getToken } = useToken();\n  useEffect(() => {\n    if (token) {\n      loadUserFromToken(getToken()).then((result) => {\n        if (!result.token) {\n          clearToken();\n        } else {\n          props.setUserAC(result);\n          props.setTokenAC(renewToken(result.token, result.email));\n        }\n      });\n    }\n  }, []);\n\n  if (token && token.expiry < new Date().getTime()) {\n    clearToken();\n  }\n  if (!token) {\n    return <AuthFormHOC setToken={setToken} />;\n  } else {\n    return (\n      <div className=\"wrapper\">\n        <BrowserRouter>\n          <Header\n            currUser={props.state.authData.currUser}\n            clearToken={clearToken}\n          />\n          <Switch >\n            <Route exact path=\"/\">\n              <Userboard state={props.state} clearToken={clearToken} />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/control\">\n              <ControlPanelHOC />\n            </Route>\n            <Route path=\"/userprofiles\">\n              <AdminUserboard />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  state: state,\n});\n\nconst App = connect(mapStateToProps, { setUserAC, setTokenAC, setProfilesAC })(\n  AppMain\n);\nexport default App;\n","import { useState } from \"react\";\r\nimport { loginUser } from \"../apiCalls/apiCalls.js\";\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem(\"token\");\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken;\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = (userToken) => {\r\n    localStorage.setItem(\"token\", JSON.stringify(userToken));\r\n    setToken(userToken);\r\n  };\r\n  const deleteToken = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setToken();\r\n  };\r\n  const renewToken = (token, email) => {\r\n    loginUser({ email }, \"PUT\").then((result) => {\r\n      setToken(result);\r\n      localStorage.setItem(\"token\", JSON.stringify(result));\r\n\r\n      return result;\r\n    });\r\n  };\r\n  return {\r\n    setToken: saveToken,\r\n    clearToken: deleteToken,\r\n    renewToken: renewToken,\r\n    getToken: getToken,\r\n    token,\r\n  };\r\n}\r\n","const SET_USER = \"SET-USER\";\r\nconst SET_TOKEN = \"SET-TOKEN\";\r\n\r\nexport let defaultUsers = {\r\n  currUser: {\r\n    email: \"testmail\",\r\n  },\r\n};\r\n\r\nexport const authReducer = (state = defaultUsers, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        currUser: action.user,\r\n      };\r\n\r\n    case SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        currUser: { ...state.currUser, token: { ...action.token } },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;\r\n","const SET_PROFILES = \"SET-PROFILES\";\r\n\r\nlet defaultProfiles = {\r\n  currProfiles: [],\r\n};\r\n\r\nexport const profileReducer = (state = defaultProfiles, action) => {\r\n  switch (action.type) {\r\n    case SET_PROFILES:\r\n      return {\r\n        ...state,\r\n        currProfiles: [...action.profiles],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default profileReducer;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport profileReducer from \"./profilesReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  authData: authReducer,\r\n  profileData: profileReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from  './redux/redux-store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n  <App state={store.getState()} dispatch={store.dispatch.bind(store)} />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Userboard\":\"UserProfiles_Userboard__2aU5Z\",\"addButton\":\"UserProfiles_addButton__Kvj31\",\"boxGrid\":\"UserProfiles_boxGrid__yR2QL\",\"box\":\"UserProfiles_box__uECKc\",\"roleSelect\":\"UserProfiles_roleSelect__3M-IR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__DlE4a\",\"User\":\"Header_User__sI2_r\",\"adminPhoto\":\"Header_adminPhoto__1yISi\",\"userPhoto\":\"Header_userPhoto__2M3EZ\",\"Buttons\":\"Header_Buttons__1Oqka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formikWrap\":\"Login_formikWrap__2zAfX\",\"formikForm\":\"Login_formikForm__1lWvK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard_Dashboard__3nbQf\"};"],"sourceRoot":""}