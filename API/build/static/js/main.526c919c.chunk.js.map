{"version":3,"sources":["components/userboard/userprofiles/UserProfiles.module.css","components/header/Header.module.css","components/dashboard/Dashboard.module.css","components/dashboard/Dashboard.jsx","apiCalls/apiCalls.js","redux/actionCreators.js","components/userboard/userprofiles/ProfileBox.jsx","components/userboard/userprofiles/UserProfiles.jsx","components/userboard/Userboard.jsx","components/header/Header.jsx","components/controlpanel/UserBox.jsx","components/controlpanel/ControlPanel.jsx","components/forms/LoginForm.jsx","App.js","hooks/useToken.js","reportWebVitals.js","redux/authReducer.js","redux/profilesReducer.js","redux/redux-store.js","index.js"],"names":["module","exports","Dashboard","useState","users","pofiles","matureProfiles","stats","setStats","useEffect","fetch","method","headers","body","then","data","json","res","profiles","console","log","className","styl","loginUser","credentials","a","JSON","stringify","regUser","token","catch","err","loadUserFromToken","fetchUser","result","getProfiles","email","profileChange","profile","setUserAC","User","type","user","setProfilesAC","ProfileBoxHOC","connect","state","ownProps","props","operation","setOperation","name","setName","surname","setSurname","age","setAge","handleSubmit","e","preventDefault","author","alert","currUser","questionButtons","value","onClick","defaultButtons","chosenButtons","boxValues","inputAreas","onChange","target","parseInt","defaultNames","box","alt","src","onSubmit","HocUserProfiles","authData","profileList","profileData","currProfiles","username","wantedUser","userboxes","map","el","_id","Userboard","submitButton","addButton","id","boxGrid","AdminUserboard","location","useLocation","setWantedUser","wantedProfile","Header","role","adminPhoto","userPhoto","Buttons","to","pathname","clearToken","UserBoxHOC","mail","setMail","setRole","fetchUsers","setUsers","ControlPanelHOC","Users","UserList","i","AuthFormHOC","setToken","initialValues","password","validate","values","errors","test","regResponse","checked","App","setTokenAC","getToken","tokenString","localStorage","getItem","parse","userToken","setItem","removeItem","renewToken","useToken","expiry","Date","getTime","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER","SET_TOKEN","defaultUsers","authReducer","action","SET_PROFILES","defaultProfiles","profileReducer","reducers","combineReducers","store","createStore","ReactDOM","render","getState","dispatch","bind","document","getElementById"],"mappings":"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","file":"static/js/main.526c919c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Userboard\":\"UserProfiles_Userboard__2aU5Z\",\"addButton\":\"UserProfiles_addButton__Kvj31\",\"boxGrid\":\"UserProfiles_boxGrid__yR2QL\",\"box\":\"UserProfiles_box__uECKc\",\"submitButton\":\"UserProfiles_submitButton__2h4H9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__DlE4a\",\"User\":\"Header_User__sI2_r\",\"adminPhoto\":\"Header_adminPhoto__1yISi\",\"userPhoto\":\"Header_userPhoto__2M3EZ\",\"Buttons\":\"Header_Buttons__1Oqka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard_Dashboard__3nbQf\"};","import React, { useEffect,useState } from 'react';\r\nimport styl from './Dashboard.module.css'\r\n\r\nexport function  getStats(){\r\n  return fetch('/api/stats',{method:\"POST\",\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  body:null\r\n}).then(data => \r\n      data.json())\r\n}\r\n\r\nexport default function Dashboard() {\r\n    const [stats,setStats]=useState({users:0,pofiles:0,matureProfiles:0});\r\n    useEffect(()=>{\r\n        getStats().then(res =>{\r\n            setStats({users:res[0],profiles:res[1],matureProfiles:res[2]});\r\n            console.log({users:res[0],profiles:res[1],matureProfiles:res[2]})\r\n        })\r\n    },[])\r\n  return(<div className={styl.Dashboard}>\r\n  <div><h2>Dashboard</h2></div>\r\n      <div>Users:<br/><span>{stats.users}</span></div>  <div>Profiles:<br/> <span>{stats.profiles}</span></div>  <div>Profiles older than 18:<br/> <span>{stats.matureProfiles}</span></div>\r\n    \r\n    </div>\r\n  );\r\n}","export async function loginUser(credentials, method) {\r\n    return fetch(\"/api/login\", {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    }).then((data) => data.json());\r\n  }\r\n  \r\n  export async function regUser(credentials, method) {\r\n    return fetch(\"/api/register\", {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    }).then((data) => data.json());\r\n  }\r\n\r\n export async function fetchUser(token) {\r\n\r\n    return fetch('/api/login', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(token)\r\n    })\r\n      .then(data => data.json()).catch(err =>{return err})\r\n   }\r\n  \r\n export function loadUserFromToken(token){\r\n    return fetchUser(token).then((result,err)=>{\r\n      \r\n      if (!err){\r\n  \r\n      \r\n      return result\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n      \r\n      \r\n    })\r\n  \r\n    \r\n  }\r\n  \r\n  export async function  getProfiles(email){\r\n    return fetch('/api/profiles', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({email:email})\r\n    })\r\n      .then(data => data.json())\r\n  }\r\n  \r\n  export function  getStats(){\r\n    alert(\"alert\")\r\n    return fetch('/api/stats', {\r\n      method: 'GET',\r\n    })\r\n      .then(data => data.json())\r\n  }\r\n  \r\n  export async function profileChange(profile,method) {\r\n    return fetch('/api/profiles', {\r\n      method: method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(profile)\r\n    })\r\n      .then(data => data.json())\r\n   }","export const setUserAC = (User) => ({type:\"SET-USER\",user:User});\r\nexport const setProfilesAC = (profiles) => ({type:\"SET-PROFILES\",profiles:profiles});\r\nexport const setTokenAC = (token) => ({type:\"SET-TOKEN\",token:token});\r\n\r\n\r\n","import { Check, Close, Pen, Trash } from 'css.gg';\r\nimport React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { getProfiles,profileChange } from '../../../apiCalls/apiCalls';\r\nimport {setProfilesAC} from '../../../redux/actionCreators'\r\nimport styl from './UserProfiles.module.css'\r\n\r\n function ProfileBox(props) {\r\n    const [operation, setOperation] = useState(\"NONE\");\r\n    const [name, setName] = useState(props.name);\r\n    const [surname, setSurname] = useState(props.surname);\r\n    const [age, setAge] = useState(props.age);\r\n    \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(operation === 'EDIT'){\r\n            const changeProfileResult = await profileChange(\r\n                [{name,surname,age,author:props.author},{name:props.name,surname:props.surname,age:props.age,author:props.author}],\"PATCH\"\r\n            )\r\n            if(changeProfileResult===false){\r\n                alert(\"duplicate profile\")\r\n            }\r\n        getProfiles(props.currUser).then((result)=>{\r\n            props.setProfilesAC(result)\r\n            setOperation(\"NONE\")\r\n          })\r\n      }\r\n      else if(operation === 'DELETE'){\r\n        const changeProfileResult = await profileChange(\r\n            {name:props.name,surname:props.surname,age:props.age,author:props.author},\"DELETE\"\r\n        )\r\n        if(changeProfileResult===false){\r\n            alert(\"profile not deleted\")\r\n        }\r\n    getProfiles(props.currUser).then((result)=>{\r\n        props.setProfilesAC(result)\r\n        setOperation(\"NONE\")\r\n      })\r\n  }\r\n\r\n    }\r\n    const questionButtons = [(<button type=\"submit\" name=\"okay\"><Check/>Okay</button>),(<button value=\"NONE\" onClick={e => setOperation(\"NONE\")}><Close/> Cancel</button>),null,null]\r\n    const defaultButtons =[null,null,(<button value=\"EDIT\" name=\"edit\" onClick={e=>setOperation(\"EDIT\")}><Pen/>Edit</button>),(<button value=\"DELETE\" name=\"delete\" onClick={e=>setOperation(\"DELETE\")}><Trash/>Delete</button>)]\r\n    \r\n    let chosenButtons = [];\r\n    \r\n    if(operation ===\"NONE\") chosenButtons=defaultButtons    \r\n    else chosenButtons=questionButtons\r\n\r\n    let boxValues = []\r\n\r\n    const inputAreas =[(<textarea value={name} name=\"name\" onChange={e => setName(e.target.value)}/>),(<textarea value={surname} onChange={e => setSurname(e.target.value)}/>),(<textarea type=\"number\" value={age} onChange={e => setAge(parseInt(e.target.value))}/>)]\r\n    const defaultNames=[(props.name ? props.name: \"Loading\"),(props.surname ? props.surname: \"Loading\"),(props.age ? props.age: \"Loading\")]\r\n\r\n    if(operation ===\"EDIT\") boxValues=inputAreas\r\n    else boxValues=defaultNames\r\n\r\n    return(\r\n        <div className={styl.box}>\r\n        \r\n            <p><a><img alt={\"\"} src='http://mymbs.co.id/public/upload/image/user/user.png'></img></a></p>\r\n            <form onSubmit={handleSubmit} >\r\n            <span>Name: {boxValues[0]}</span>\r\n            <span>Surname: {boxValues[1]}</span>\r\n            <span>Age: {boxValues[2]}</span>\r\n            {operation===\"DELETE\" ? (<span>Are You sure?<br/></span>) : null}\r\n            <div>\r\n            {chosenButtons}\r\n            </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => ({\r\n\r\n}) \r\n\r\nlet ProfileBoxHOC = connect(mapStateToProps,{setProfilesAC})(ProfileBox)\r\nexport default  ProfileBoxHOC;\r\n","import { connect } from \"react-redux\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport {setProfilesAC} from './../../../redux/actionCreators'\r\n\r\nimport { getProfiles, profileChange } from \"../../../apiCalls/apiCalls\"\r\n\r\nimport styl from './UserProfiles.module.css'\r\nimport ProfileBoxHOC from \"./ProfileBox\"\r\nimport { Add } from \"css.gg\"\r\n\r\n\r\n\r\n\r\n\r\nfunction UserProfiles(props){\r\n    const [operation, setOperation] = useState();\r\n    const [name, setName] = useState();\r\n    const [surname, setSurname] = useState();\r\n    const [age, setAge] = useState();\r\n    \r\n    let username=(props.wantedUser? props.wantedUser: props.currUser.email);\r\n\r\n    useEffect(() => {\r\n        props.setProfilesAC([])\r\n            if(props.wantedUser){\r\n                getProfiles(props.wantedUser).then(profiles =>{\r\n\r\n                    props.setProfilesAC(profiles)\r\n                })\r\n                \r\n\r\n            }\r\n            else{\r\n\r\n                getProfiles(props.currUser.email).then(profiles =>{\r\n\r\n                    props.setProfilesAC(profiles)\r\n                })\r\n            }\r\n    },[username])\r\n\r\n    const handleSubmit = async e => {\r\n        \r\n        e.preventDefault();\r\n        if(operation ===\"ADD\"){\r\n            const addProfileResult = await profileChange(\r\n                {name,surname,age,author:(props.wantedUser ? props.wantedUser : props.currUser.email)},\"PUT\"\r\n            )\r\n\r\n            if(addProfileResult===false){\r\n                alert(\"duplicate profile\")\r\n            }\r\n            getProfiles(username).then((result)=>{\r\n                props.setProfilesAC(result)\r\n                setOperation(\"NONE\")\r\n              })\r\n        }\r\n      }\r\n\r\n    \r\n        \r\n       \r\n     \r\n    let userboxes = [...props.profileList].map(el => <ProfileBoxHOC  key={el._id} currUser={(props.wantedUser ? props.wantedUser : props.currUser.email)} name={el.name} surname={el.surname} age={el.age} author={el.author}/>)\r\nreturn(\r\n    <div>\r\n        <div className={styl.Userboard}>\r\n        <div name=\"Greeting\">\r\n        Welcome, {props.currUser.email}!<br/>\r\n        Browsing, {(props.wantedUser ? props.wantedUser : props.currUser.email)} profiles </div>\r\n\r\n        \r\n        {operation === \"ADD\" ? <form onSubmit={handleSubmit} >\r\n        <label>\r\n          <p>Name</p>\r\n          <input type=\"text\" name='name' onChange={e => setName(e.target.value)}/>\r\n        </label>\r\n        <label>\r\n          <p>Surname</p>\r\n          <input type=\"text\" name='surname' onChange={e => setSurname(e.target.value)}/>\r\n        </label>\r\n        <label>\r\n          <p>Age</p>\r\n          <input type=\"number\" name='age' onChange={e => setAge(parseInt(e.target.value))}/>\r\n        </label>\r\n        <div>\r\n          <button type=\"submit\" className={styl.submitButton}>Submit</button>\r\n          <button className={styl.submitButton} onClick={()=>{setOperation(\"NONE\")}}>Cancel</button>\r\n        </div>\r\n      </form> : <button className={styl.addButton} id=\"ADD\"  value=\"ADD\" onClick={e => setOperation(e.target.value)}><Add/>Add Profile</button> }\r\n          </div>\r\n        <div className={styl.boxGrid}>{userboxes}</div>\r\n    </div>\r\n)\r\n\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => {\r\n    \r\n        return({\r\n            currUser:state.authData.currUser, \r\n            profileList:state.profileData.currProfiles\r\n        })\r\n    }\r\n    \r\n\r\n\r\n\r\nlet HocUserProfiles = connect(mapStateToProps,{setProfilesAC})(UserProfiles)\r\nexport default HocUserProfiles ","import React,{useEffect, useState} from 'react';\r\nimport HocUserProfiles from './userprofiles/UserProfiles';\r\nimport {useLocation} from 'react-router-dom'\r\n\r\n\r\nexport default function Userboard(props) {\r\n    \r\n  return(<div >\r\n  \r\n    <HocUserProfiles wantedUser={props.state.authData.currUser ? props.state.authData.currUser.email : null} />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport function AdminUserboard(props) {\r\n    let location = useLocation();\r\n\r\n      const [wantedUser, setWantedUser] = useState();\r\n      useEffect(()=>{\r\n        setWantedUser(location.state.wantedProfile)\r\n      },[])\r\n      \r\n    return(\r\n        <div>\r\n\r\n    <HocUserProfiles wantedUser={wantedUser ? wantedUser : null} />\r\n    </div>\r\n    )\r\n}","import { Controller, Eye, Home, LogOff, LogOut } from 'css.gg'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styl from './Header.module.css'\r\n\r\nexport default  function Header(props){\r\n    return(\r\n        <div className={styl.Header}>\r\n        <div className={styl.User}><img className={props.currUser.role === 'ADMIN' ? styl.adminPhoto : styl.userPhoto} alt={\"\"} src={\"http://mymbs.co.id/public/upload/image/user/user.png\"}></img><p>{props.currUser.email}</p></div>\r\n        <div className={styl.Buttons}>\r\n        <NavLink to={{\r\n   pathname:'/',\r\n   state: {wantedProfile:props.currUser.email}  \r\n }}><Home/>Home</NavLink>\r\n            \r\n            {props.currUser.role === 'ADMIN' ? <NavLink to=\"/control\"><Eye/>Control</NavLink>:null}\r\n            <a name=\"LogOut\" onClick={()=>{props.clearToken()}}><LogOff/>Log Out</a>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n    \r\n\r\n\r\n}","import React,{ useState} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {fetchUsers} from './ControlPanel'\r\nimport styl from './../userboard/userprofiles/UserProfiles.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Check, Close, Pen, Trash } from 'css.gg'\r\n\r\n\r\nfunction UserBox(props) {\r\n     \r\n    const [operation, setOperation] = useState(\"NONE\");\r\n    const [name, setName] = useState(props.user.name);\r\n    const [mail, setMail] = useState(props.user.email);\r\n    const [role, setRole] = useState(props.user.role);\r\n  \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(operation === 'EDIT'){\r\n            const changeUserResult = await fetchUsers(\r\n                \"PATCH\", [{name,email:mail,role},{name:props.user.name,email:props.user.email,role:props.user.role}]\r\n            )\r\n\r\n            if(changeUserResult===false){\r\n                alert(\"duplicate user\")\r\n            }\r\n            fetchUsers(\"POST\").then((result)=>{\r\n            \r\n            props.setUsers(result) })\r\n            setOperation(\"NONE\")\r\n         \r\n        \r\n        \r\n      }\r\n      else if(operation === 'DELETE'){\r\n        const changeUserResult = await fetchUsers(\r\n            \"DELETE\", {name:props.user.name,email:props.user.email,role:props.user.role}\r\n        )\r\n\r\n        if(changeUserResult===false){\r\n            alert(\"profile not deleted\")\r\n        }\r\n        fetchUsers().then((result)=>{\r\n            setOperation(\"NONE\")\r\n            props.setUsers(result)\r\n            \r\n          })\r\n    \r\n    \r\n  }\r\n\r\n    }\r\n\r\n    \r\n\r\n   if(props.currUser.role === 'ADMIN'){\r\n    //\r\n    const questionButtons = [(<button type=\"submit\" name=\"okay\"><Check/>Okay</button>),(<button value=\"NONE\" onClick={e => setOperation(\"NONE\")}><Close/> Cancel</button>),null,null]\r\n    const defaultButtons =[null,null,(<button value=\"EDIT\" name=\"edit\" onClick={e=>setOperation(\"EDIT\")}><Pen/>Edit</button>),(<button value=\"DELETE\" name=\"delete\" onClick={e=>setOperation(\"DELETE\")}><Trash/>Delete</button>)]\r\n    \r\n    let chosenButtons = [];\r\n    \r\n    if(operation ===\"NONE\") chosenButtons=defaultButtons    \r\n    else chosenButtons=questionButtons\r\n\r\n    let boxValues = []\r\n\r\n    const inputAreas =[(<textarea value={name} name=\"name\" onChange={e => setName(e.target.value)}/>),(<textarea value={mail} onChange={e => setMail(e.target.value)}/>),( <select  id=\"roles\" onChange={(e) => setRole(e.target.value)} name=\"roles\"><option value=\"USER\">USER</option><option value=\"ADMIN\">ADMIN</option></select>)]\r\n    const defaultNames=[(props.user? props.user.name: \"Loading\"),(props.user ? props.user.email: \"Loading\"),( props.user ? props.user.role: \"Loading\")]\r\n\r\n    if(operation ===\"EDIT\") boxValues=inputAreas\r\n    else boxValues=defaultNames\r\n    //\r\n  return(<div className={styl.box}>\r\n        <p>\r\n        <NavLink name=\"user\" to={{\r\n   pathname:'/userprofiles',\r\n   state: {wantedProfile:props.user.email}  \r\n }}><img alt={\"\"} src='http://mymbs.co.id/public/upload/image/user/user.png'></img></NavLink></p>\r\n    <form onSubmit={handleSubmit} >\r\n    <span>Name: {boxValues[0]}</span>\r\n    <span>Mail: {boxValues[1]}</span>\r\n    <span>Role: {boxValues[2]}</span>\r\n    {operation===\"DELETE\" ? (<span>Are You sure?<br/></span>) : null}\r\n    <div>\r\n    {chosenButtons}\r\n    </div>\r\n    </form>\r\n</div>\r\n  );\r\n   }\r\n   else return (<span>You have no access to this data.</span>)\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => ({\r\n    currUser:state.authData.currUser\r\n\r\n})\r\n\r\nlet UserBoxHOC =connect(mapStateToProps,{})(UserBox)\r\nexport default UserBoxHOC\r\n","import React, { useEffect, useState } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport UserBoxHOC from './UserBox';\r\nimport styl from './../userboard/userprofiles/UserProfiles.module.css'\r\nimport Dashboard from '../dashboard/Dashboard';\r\n\r\nexport async function fetchUsers(method,user=null) {\r\n \r\n  return fetch('/api/admin', {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({user})\r\n  })\r\n    .then(data => data.json()).catch(err =>{return err})\r\n }\r\n\r\n\r\n function ControlPanel(props) {\r\n  \r\n   const [Users,setUsers]=useState();\r\n   useEffect(()=>{\r\n     setUsers([])\r\n      const getUserList = fetchUsers(\"POST\").then(result =>{\r\n\r\n        setUsers(result)\r\n\r\n\r\n      })\r\n\r\n   },[])\r\n   if(props.currUser.role === 'ADMIN' && Users){\r\n     \r\n     let UserList = [...Users].map((e,i) => <UserBoxHOC key={Users[i]._id} setUsers={setUsers} user={Users[i]}/>)\r\n  return(<div>\r\n    \r\n   \r\n    <Dashboard/>\r\n    <div className={styl.boxGrid}>{UserList}</div>\r\n    </div>\r\n  );\r\n   }\r\n   else return (<span>You have no access to this page.</span>)\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  currUser:state.authData.currUser\r\n\r\n})\r\n\r\nlet ControlPanelHOC =connect(mapStateToProps,{})(ControlPanel)\r\nexport default ControlPanelHOC","import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { loginUser, regUser,getProfiles } from \"../../apiCalls/apiCalls\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setUserAC, setProfilesAC } from \"../../redux/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction validate (values,operation){\r\n    const errors={};\r\n    if (!values.email) {\r\n     errors.email = 'Required';\r\n   } else if (\r\n     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n   ) {\r\n     errors.email = 'Invalid email address';\r\n   }\r\n   if (!values.password){\r\n    errors.password = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-]{2,}$/i.test(values.password)\r\n  ) {\r\n    errors.password = 'Invalid password';\r\n  }\r\n  if (!values.name && operation===\"Register\"){\r\n    errors.name = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-]{2,}$/i.test(values.name) && operation===\"Register\"\r\n  ) {\r\n    errors.name = 'Invalid name';\r\n  }\r\n   return errors;\r\n}\r\n\r\n\r\nconst AuthForm = (props) => {\r\n  const [operation, setOperation] = useState(\"Login\");\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", name: \"\" }}\r\n      validate={(values)=>validate(values,operation)}\r\n      onSubmit={ async (user) => {\r\n          console.log(user)\r\n        if (operation === \"Register\") {\r\n            const regResponse = await regUser(//не доделанно только регистрация \r\n        {\r\n          username: user.email,\r\n          password: user.password,\r\n          role:\"USER\",\r\n          name: user.name\r\n        },\r\n        \"POST\"\r\n      );\r\n        console.log(regResponse)\r\n      if (regResponse === false) {\r\n        alert(\"Email already registered\");\r\n      }\r\n    }\r\n    const token = await loginUser(\r\n      {\r\n        username: user.email,\r\n        password:user.password,\r\n      },\r\n      \"POST\"\r\n    );\r\n    if (token[0].token) {\r\n      props.setToken(token[0]);\r\n      props.setUserAC({\r\n        email: user.email,\r\n        role: token[1],\r\n        token: token,\r\n      });\r\n      getProfiles(user.email).then((result) => {\r\n        props.setProfilesAC(result);\r\n      });\r\n    } else {\r\n      alert(\"Login failed\");\r\n    }\r\n    \r\n      }}\r\n    >\r\n      {({errors}) => {\r\n          console.log(errors) \r\n          return( \r\n        \r\n          <Form>\r\n            <Field name=\"email\" />\r\n            {errors ? errors.email:null}\r\n            <Field name=\"password\" />\r\n            {errors ? errors.password:null}\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                onChange={(e) => setOperation(\"Register\")}\r\n                checked={operation === \"Register\"}\r\n                name=\"radio\"\r\n                value=\"sign up\"\r\n              />\r\n              Sign up\r\n              \r\n            </label>\r\n\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                onChange={(e) => setOperation(\"Login\")}\r\n                checked={operation === \"Login\"}\r\n                name=\"radio\"\r\n                value=\"sign in\"\r\n              />\r\n              Sign in\r\n            </label>\r\n            <Field name=\"name\" />\r\n            {errors ? errors.name:null}\r\n            <button type=\"submit\">Submit</button>\r\n          </Form>\r\n        \r\n      )}}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nAuthForm.propTypes = {\r\n    setToken: PropTypes.func.isRequired,\r\n  };\r\n  \r\n  let mapStateToProps = (state, ownProps) => ({\r\n    state: state,\r\n    setToken: ownProps.setToken,\r\n  });\r\n  let AuthFormHOC = connect(mapStateToProps, { setUserAC, setProfilesAC })(AuthForm);\r\nexport default AuthFormHOC;","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Dashboard from './components/dashboard/Dashboard';\nimport useToken from './hooks/useToken';\nimport Userboard,{AdminUserboard} from './components/userboard/Userboard';\nimport {connect } from 'react-redux';\nimport { setTokenAC, setUserAC, setProfilesAC } from './redux/actionCreators';\nimport Header from './components/header/Header';\nimport ControlPanelHOC from './components/controlpanel/ControlPanel';\nimport AuthFormHOC from './components/forms/LoginForm';\nimport { getProfiles, loadUserFromToken } from './apiCalls/apiCalls';\n\n\n\n\nfunction AppMain(props) {\n \n  const { token, setToken, clearToken, renewToken, getToken } = useToken();\n  useEffect(()=>{\n      if(token){\n      loadUserFromToken(getToken()).then((result)=>{\n        if(!result.token){\n          clearToken()\n        }\n        else{\n\n          props.setUserAC(result)\n          props.setTokenAC(renewToken(result.token,result.email))\n\n          getProfiles(result.email).then((result)=>{\n            props.setProfilesAC(result)\n          })\n          \n          \n        }\n      })\n\n      \n    }\n      },[]\n  )\n \n  if (token && token.expiry < (new Date()).getTime()) {\n    clearToken()\n  }\n  if(!token ) {\n    \n    return <AuthFormHOC  setToken={setToken} />\n  }\n  else{\n\n    \n  return (\n    \n      <div className=\"wrapper\">\n        \n        \n        <BrowserRouter>\n          <Header currUser={props.state.authData.currUser} clearToken={clearToken}/>\n          <Switch>\n          <Route exact path=\"/\">\n              <Userboard  state={props.state}  clearToken={clearToken} />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/control\">\n              <ControlPanelHOC />\n            </Route>\n            <Route path=\"/userprofiles\">\n              <AdminUserboard />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n        \n      </div>\n      \n    );\n  }\n}\n\nlet mapStateToProps = (state) =>({\n  state:state\n})\n\nconst App = connect(mapStateToProps,{setUserAC,setTokenAC,setProfilesAC})(AppMain)\nexport default App;\n","import { useState } from 'react';\r\nimport { loginUser } from '../apiCalls/apiCalls.js';\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken);\r\n  };\r\n  const deleteToken = () => {\r\n      localStorage.removeItem('token');\r\n      setToken();\r\n  }\r\n  const renewToken = (token,email)=>{\r\n    loginUser({email},\"PUT\").then((result)=>{\r\n        setToken(result)\r\n        localStorage.setItem('token', JSON.stringify(result));\r\n\r\n        return result\r\n    })\r\n}\r\n  return {\r\n    \r\n    setToken: saveToken,\r\n    clearToken: deleteToken,\r\n    renewToken: renewToken,\r\n    getToken: getToken,\r\n    token\r\n  }\r\n\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const SET_USER = \"SET-USER\"\r\nconst SET_TOKEN = \"SET-TOKEN\"\r\n\r\nlet defaultUsers = {\r\n\r\n    currUser:{\r\n            \r\n            },\r\n           \r\n            \r\n          \r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport const authReducer = (state=defaultUsers,action)=>{\r\n    \r\n    \r\n    switch(action.type){\r\n        case SET_USER:\r\n\r\n            \r\n            \r\n                return({\r\n                    ...state,currUser: action.user\r\n                })\r\n                \r\n        case SET_TOKEN:\r\n\r\n                        return({\r\n                            ...state,currUser: {...state.currUser,token:{...action.token}}\r\n                        })\r\n                    \r\n        default:\r\n            return state\r\n\r\n    }\r\n    \r\n    \r\n\r\n\r\n}\r\nexport default authReducer;","const SET_PROFILES = \"SET-PROFILES\"\r\n\r\nlet defaultProfiles = {\r\n\r\n    currProfiles:[]\r\n            \r\n            \r\n           \r\n            \r\n          \r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport const profileReducer = (state=defaultProfiles,action)=>{\r\n    \r\n   \r\n    switch(action.type){\r\n        case SET_PROFILES:\r\n\r\n                return({\r\n                    ...state,currProfiles: [...action.profiles]\r\n                })\r\n            \r\n        default:\r\n            return state\r\n\r\n    }\r\n    \r\n    \r\n\r\n\r\n}\r\nexport default profileReducer;","import { combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport profileReducer from \"./profilesReducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    authData: authReducer,\r\n    profileData: profileReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\n\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from  './redux/redux-store'\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <App state={store.getState()} dispatch={store.dispatch.bind(store)} />\n  </Provider>\n  ,\n  document.getElementById('root')\n  \n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}