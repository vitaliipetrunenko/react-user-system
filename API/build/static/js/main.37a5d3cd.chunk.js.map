{"version":3,"sources":["apiCalls/apiCalls.js","components/dashboard/Dashboard.jsx","redux/actionCreators.js","components/userboard/userprofiles/ProfileBox.jsx","components/forms/common/FormikMaterialTextField.jsx","components/forms/common/Validators.js","components/forms/common/ErrorsText.js","components/forms/ProfileForm.jsx","components/userboard/userprofiles/UserProfiles.jsx","components/userboard/Userboard.jsx","redux/roles.js","components/header/Header.jsx","components/controlpanel/UserBox.jsx","components/controlpanel/ControlPanel.jsx","components/forms/LoginForm.jsx","App.js","hooks/useToken.js","redux/authReducer.js","redux/profilesReducer.js","redux/redux-store.js","index.js","components/userboard/userprofiles/UserProfiles.module.css","components/dashboard/Dashboard.module.css","components/header/Header.module.css","components/forms/styles/Login.module.css"],"names":["loginUser","credentials","method","a","fetch","headers","body","JSON","stringify","then","data","json","regUser","token","catch","err","loadUserFromToken","fetchUser","result","getProfiles","email","profileChange","profile","fetchUsers","user","Dashboard","useState","users","profiles","matureProfiles","stats","setStats","areStatsLoading","setStatsLoading","useEffect","res","className","styl","DashBox","CircularProgress","setUserAC","User","type","setProfilesAC","ProfileBoxHOC","connect","state","ownProps","props","operation","setOperation","name","setName","surname","setSurname","age","setAge","handleSubmit","e","preventDefault","author","alert","currUser","questionButtons","Button","value","onClick","defaultButtons","id","chosenButtons","boxValues","inputAreas","TextField","label","onChange","target","parseInt","defaultNames","box","alt","src","onSubmit","FormikMaterialTextField","formik","useFormikContext","error","errors","values","onInput","handleChange","onBlur","handleBlur","helperText","InputLabelProps","shrink","emailValidate","passwordValidate","nameValidate","ageValidate","badName","reqField","usedEmail","failedLogin","dupProfile","profileProcess","setProfilesACprop","ProfileFormHOC","initialValues","validate","test","data-testid","OfflinePinSharp","HocUserProfiles","authData","profileList","profileData","currProfiles","isLoadingProfiles","isLoading","setLoadingTrueAC","username","userboxes","map","el","_id","Userboard","boxGrid","AdminUserboard","location","useLocation","wantedUser","setWantedUser","wantedProfile","usrRole","admRole","Header","role","adminPhoto","userPhoto","Buttons","to","pathname","HomeSharp","clearToken","UserBoxHOC","mail","setMail","setRole","setUsers","Select","roleSelect","ControlPanelHOC","Users","areUsersLoading","setUsersLoading","UserList","i","login","register","password","setToken","AuthFormHOC","formikWrap","authProcess","formikForm","Radio","checked","App","setTokenAC","getToken","tokenString","localStorage","getItem","parse","userToken","setItem","removeItem","renewToken","useToken","expiry","Date","getTime","exact","path","SET_USER","SET_TOKEN","defaultUsers","authReducer","action","SET_PROFILES","SET_LOADING_TRUE","defaultProfiles","profileReducer","reducers","combineReducers","store","createStore","ReactDOM","render","getState","dispatch","bind","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.37a5d3cd.chunk.js","sourcesContent":["export async function loginUser(credentials, method) {\r\n  return fetch(\"/api/login\", {\r\n    method: method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nexport async function regUser(credentials, method) {\r\n  return fetch(\"/api/register\", {\r\n    method: method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nexport async function fetchUser(token) {\r\n  return fetch(\"/api/login\", {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(token),\r\n  })\r\n    .then((data) => data.json())\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function loadUserFromToken(token) {\r\n  return fetchUser(token).then((result, err) => {\r\n    if (!err) {\r\n      return result;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\nexport async function getProfiles(email) {\r\n  return fetch(\"/api/profiles\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email: email }),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nexport async function profileChange(profile, method) {\r\n  return fetch(\"/api/profiles\", {\r\n    method: method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(profile),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nexport function getStats() {\r\n  return fetch(\"/api/stats\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: null,\r\n  }).then((data) => data.json());\r\n}\r\n\r\nexport async function fetchUsers(method, user = null) {\r\n  return fetch(\"/api/admin\", {\r\n    method: method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ user }),\r\n  })\r\n    .then((data) => data.json())\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getStats } from \"../../apiCalls/apiCalls\";\r\nimport styl from \"./Dashboard.module.css\";\r\n\r\nexport default function Dashboard() {\r\n  const [stats, setStats] = useState({\r\n    users: 0,\r\n    profiles: 0,\r\n    matureProfiles: 0,\r\n  });\r\n  const [areStatsLoading, setStatsLoading] = useState(false); //\r\n  useEffect(() => {\r\n    setStatsLoading(true);\r\n    getStats().then((res) => {\r\n      setStats({ users: res[0], profiles: res[1], matureProfiles: res[2] });\r\n      setStatsLoading(false); //\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className={styl.Dashboard}>\r\n      <div className={styl.DashBox}>\r\n        <h2>Dashboard</h2>\r\n      </div>\r\n      <div className={styl.DashBox}>\r\n        Users:\r\n        <br />\r\n        <span>{areStatsLoading ? <CircularProgress /> : stats.users}</span>\r\n      </div>{\" \"}\r\n      <div className={styl.DashBox}>\r\n        Profiles:\r\n        <br />{\" \"}\r\n        <span>{areStatsLoading ? <CircularProgress /> : stats.profiles}</span>\r\n      </div>{\" \"}\r\n      <div className={styl.DashBox}>\r\n        Profiles over 18:\r\n        <br />{\" \"}\r\n        <span>\r\n          {areStatsLoading ? <CircularProgress /> : stats.matureProfiles}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const setUserAC = (User) => ({ type: \"SET-USER\", user: User });\r\nexport const setProfilesAC = (profiles) => ({\r\n  type: \"SET-PROFILES\",\r\n  profiles: profiles,\r\n});\r\nexport const setTokenAC = (token) => ({ type: \"SET-TOKEN\", token: token });\r\nexport const setLoadingTrueAC = () => ({ type: \"SET-LOADING-TRUE\" });\r\n","import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfiles, profileChange } from \"../../../apiCalls/apiCalls\";\r\nimport { setProfilesAC } from \"../../../redux/actionCreators\";\r\nimport styl from \"./UserProfiles.module.css\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nfunction ProfileBox(props) {\r\n  const [operation, setOperation] = useState(\"NONE\");\r\n  const [name, setName] = useState(props.name);\r\n  const [surname, setSurname] = useState(props.surname);\r\n  const [age, setAge] = useState(props.age);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (operation === \"EDIT\") {\r\n      const changeProfileResult = await profileChange(\r\n        [\r\n          { name, surname, age, author: props.author },\r\n          {\r\n            name: props.name,\r\n            surname: props.surname,\r\n            age: props.age,\r\n            author: props.author,\r\n          },\r\n        ],\r\n        \"PATCH\"\r\n      );\r\n      if (changeProfileResult === false) {\r\n        alert(\"duplicate profile\");\r\n      }\r\n      getProfiles(props.currUser).then((result) => {\r\n        props.setProfilesAC(result);\r\n        setOperation(\"NONE\");\r\n      });\r\n    } else if (operation === \"DELETE\") {\r\n      const changeProfileResult = await profileChange(\r\n        {\r\n          name: props.name,\r\n          surname: props.surname,\r\n          age: props.age,\r\n          author: props.author,\r\n        },\r\n        \"DELETE\"\r\n      );\r\n      if (changeProfileResult === false) {\r\n        alert(\"profile not deleted\");\r\n      }\r\n      getProfiles(props.currUser).then((result) => {\r\n        props.setProfilesAC(result);\r\n        setOperation(\"NONE\");\r\n      });\r\n    }\r\n  };\r\n  const questionButtons = [\r\n    <Button key={1} type=\"submit\" name=\"okay\">\r\n      Okay\r\n      <CheckIcon />\r\n    </Button>,\r\n    <Button value=\"NONE\" key={2}  onClick={(e) => setOperation(\"NONE\")}>\r\n      Cancel\r\n      <CancelIcon />{\" \"}\r\n    </Button>,\r\n    null,\r\n    null,\r\n  ];\r\n  const defaultButtons = [\r\n    null,\r\n    null,\r\n    <Button key={1} \r\n      value=\"EDIT\"\r\n      id=\"edit\"\r\n      name=\"edit\"\r\n      onClick={(e) => setOperation(\"EDIT\")}\r\n    >\r\n      Edit\r\n      <CreateIcon />\r\n    </Button>,\r\n    <Button key={2} \r\n      value=\"DELETE\"\r\n      name=\"delete\"\r\n      onClick={(e) => setOperation(\"DELETE\")}\r\n    >\r\n      Delete\r\n      <DeleteIcon />\r\n    </Button>,\r\n  ];\r\n\r\n  let chosenButtons = [];\r\n\r\n  if (operation === \"NONE\") chosenButtons = defaultButtons;\r\n  else chosenButtons = questionButtons;\r\n\r\n  let boxValues = [];\r\n\r\n  const inputAreas = [\r\n    <TextField\r\n      value={name}\r\n      id=\"name\"\r\n      name=\"name\"\r\n      label=\"name\"\r\n      onChange={(e) => setName(e.target.value)}\r\n    />,\r\n    <TextField value={surname} onChange={(e) => setSurname(e.target.value)} />,\r\n    <TextField\r\n      type=\"number\"\r\n      value={age}\r\n      onChange={(e) => setAge(parseInt(e.target.value))}\r\n    />,\r\n  ];\r\n  const defaultNames = [\r\n    props.name ? props.name : \"Loading\",\r\n    props.surname ? props.surname : \"Loading\",\r\n    props.age ? props.age : \"Loading\",\r\n  ];\r\n\r\n  if (operation === \"EDIT\") boxValues = inputAreas;\r\n  else boxValues = defaultNames;\r\n\r\n  return (\r\n    <div className={styl.box}>\r\n      {operation === \"NONE\" ? (\r\n        <p>\r\n          <a>\r\n            <img\r\n              alt={\"\"}\r\n              src=\"http://mymbs.co.id/public/upload/image/user/user.png\"\r\n            ></img>\r\n          </a>\r\n        </p>\r\n      ) : null}\r\n      <form onSubmit={handleSubmit}>\r\n        <span name=\"name\" label=\"name\">\r\n          Name: {boxValues[0]}\r\n        </span>\r\n        <span>Surname: {boxValues[1]}</span>\r\n        <span>Age: {boxValues[2]}</span>\r\n        {operation === \"DELETE\" ? (\r\n          <span>\r\n            Are You sure?\r\n            <br />\r\n          </span>\r\n        ) : null}\r\n        <div>{chosenButtons}</div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state, ownProps) => ({});\r\n\r\nlet ProfileBoxHOC = connect(mapStateToProps, { setProfilesAC })(ProfileBox);\r\nexport default ProfileBoxHOC;\r\n","import React from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nfunction FormikMaterialTextField(props) {\r\n  const formik = useFormikContext();\r\n  const { name } = props;\r\n\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      error={!!formik.errors[name]}\r\n      value={formik.values[name]}\r\n      onInput={formik.handleChange}\r\n      onBlur={formik.handleBlur}\r\n      helperText={formik.errors[name]}\r\n      InputLabelProps={{ shrink: false }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FormikMaterialTextField;\r\n","export const emailValidate = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\r\nexport const passwordValidate = /^[A-Z0-9._%+-]{2,}$/i\r\nexport const nameValidate = /^[A-Z0-9._%+-]{2,}$/i\r\nexport const ageValidate = /^[0-9]{1,}$/i","export const badEmail = \"Invalid email address\"\r\nexport const badName = \"Invalid name\"\r\nexport const badPass = \"Invalid password\"\r\nexport const badAge = \"Invalid age\"\r\nexport const reqField = \"Required\"\r\nexport const usedEmail = \"Email already registered\"\r\nexport const failedLogin = \"Login failed\"\r\nexport const dupProfile = \"duplicate profile\"","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { getProfiles, profileChange } from \"../../apiCalls/apiCalls\";\r\nimport { connect } from \"react-redux\";\r\nimport FormikMaterialTextField from \"./common/FormikMaterialTextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { OfflinePinSharp } from \"@material-ui/icons/\";\r\nimport { setProfilesAC } from \"./../../redux/actionCreators\";\r\nimport {ageValidate, nameValidate } from \"./common/Validators\";\r\nimport { badName,badAge, reqField, dupProfile } from \"./common/ErrorsText\";\r\n\r\n\r\nfunction validate(values, operation) {\r\n  const errors = {};\r\n  if (!values.name) {\r\n    errors.name = reqField;\r\n  } else if (!nameValidate.test(values.name)) {\r\n    errors.name = badName;\r\n  }\r\n  if (!values.surname) {\r\n    errors.surname = reqField;\r\n  } else if (!nameValidate.test(values.surname)) {\r\n    errors.surname = badName;\r\n  }\r\n  if (!values.age) {\r\n    errors.age = reqField;\r\n  } else if (!ageValidate.test(values.age)) {\r\n    errors.age = badAge;\r\n  }\r\n  return errors;\r\n}\r\n\r\nasync function profileProcess(profile, User, setProfilesACprop) {\r\n  const addProfileResult = await profileChange(\r\n    {\r\n      name: profile.name,\r\n      surname: profile.surname,\r\n      age: profile.age,\r\n      author: User,\r\n    },\r\n    \"PUT\"\r\n  );\r\n  if (addProfileResult === false) {\r\n    alert(dupProfile);\r\n  }\r\n  getProfiles(User).then((result) => {\r\n    setProfilesACprop(result);\r\n  });\r\n}\r\n\r\nconst ProfileForm = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: \"\", surname: \"\", age: \"\" }}\r\n      validate={(values) => validate(values)}\r\n      onSubmit={async (profile) =>\r\n        profileProcess(profile, props.User, props.setProfilesAC)\r\n      }\r\n    >\r\n      <Form>\r\n        <div>\r\n          Name:\r\n          <br />\r\n          <FormikMaterialTextField name=\"name\" id=\"nameA\" label=\"nameF\" />\r\n          <br />\r\n        </div>\r\n\r\n        <div>\r\n          Surname:\r\n          <br />\r\n          <FormikMaterialTextField\r\n            name=\"surname\"\r\n            id=\"surnameA\"\r\n            label=\"surnameF\"\r\n          />\r\n          <br />\r\n        </div>\r\n\r\n        <div>\r\n          Age:\r\n          <br />\r\n          <FormikMaterialTextField\r\n            type=\"number\"\r\n            id=\"ageA\"\r\n            name=\"age\"\r\n            label=\"ageF\"\r\n          />\r\n          <br />\r\n        </div>\r\n\r\n        <Button type=\"submit\" data-testid=\"submitter\">\r\n          {\" \"}\r\n          <OfflinePinSharp />{\" \"}\r\n        </Button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n  state: state,\r\n});\r\nlet ProfileFormHOC = connect(mapStateToProps, { setProfilesAC })(ProfileForm);\r\nexport default ProfileFormHOC;\r\n","import { connect } from \"react-redux\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  setProfilesAC,\r\n  setLoadingTrueAC,\r\n} from \"./../../../redux/actionCreators\";\r\nimport { getProfiles } from \"../../../apiCalls/apiCalls\";\r\nimport styl from \"./UserProfiles.module.css\";\r\nimport ProfileBoxHOC from \"./ProfileBox\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport ProfileFormHOC from \"../../forms/ProfileForm\";\r\n\r\nfunction UserProfiles(props) {\r\n  const [operation, setOperation] = useState();\r\n\r\n  let username = props.User ? props.User : props.currUser.email;\r\n\r\n  useEffect(() => {\r\n    props.setLoadingTrueAC();\r\n    getProfiles(username).then((profiles) => {\r\n      props.setProfilesAC(profiles);\r\n    });\r\n  }, [username]);\r\n\r\n  let userboxes = [...props.profileList].map((el) => (\r\n    <ProfileBoxHOC\r\n      key={el._id}\r\n      currUser={username}\r\n      name={el.name}\r\n      surname={el.surname}\r\n      age={el.age}\r\n      author={el.author}\r\n    />\r\n  ));\r\n  return (\r\n    <div className=\"contentBlock\">\r\n      <div className={styl.Userboard}>\r\n        <div id=\"Greeting\">\r\n          Welcome, {props.currUser.email}!<br />\r\n          Browsing, {username} profiles{\" \"}\r\n        </div>\r\n\r\n        {operation === \"ADD\" ? (\r\n          <div>\r\n            <ProfileFormHOC User={username}></ProfileFormHOC>\r\n            <Button\r\n              onClick={() => {\r\n                setOperation(\"NONE\");\r\n              }}\r\n            >\r\n              <CancelIcon />\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <Button id=\"ADD\" value=\"ADD\" onClick={(e) => setOperation(\"ADD\")}>\r\n            {\" \"}\r\n            Add Profile <CreateIcon />\r\n          </Button>\r\n        )}\r\n      </div>\r\n      {props.isLoadingProfiles ? (\r\n        <div className=\"LoaderWrap\">\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <div className={styl.boxGrid}> {userboxes}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    currUser: state.authData.currUser,\r\n    profileList: state.profileData.currProfiles,\r\n    isLoadingProfiles: state.profileData.isLoading,\r\n  };\r\n};\r\n\r\nlet HocUserProfiles = connect(mapStateToProps, {\r\n  setProfilesAC,\r\n  setLoadingTrueAC,\r\n})(UserProfiles);\r\nexport default HocUserProfiles;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HocUserProfiles from \"./userprofiles/UserProfiles\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function Userboard(props) {\r\n  return (\r\n    <div>\r\n      <HocUserProfiles\r\n        User={\r\n          props.state.authData.currUser\r\n            ? props.state.authData.currUser.email\r\n            : null\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function AdminUserboard(props) {\r\n  let location = useLocation();\r\n  const [wantedUser, setWantedUser] = useState();\r\n  useEffect(() => {\r\n    setWantedUser(location.state.wantedProfile);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <HocUserProfiles User={wantedUser ? wantedUser : null} />\r\n    </div>\r\n  );\r\n}\r\n","export const usrRole = \"USER\"\r\nexport const admRole = \"ADMIN\"","import { Button } from \"@material-ui/core\";\r\nimport { HomeSharp } from \"@material-ui/icons\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styl from \"./Header.module.css\";\r\nimport { admRole } from \"../../redux/roles\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <div className={styl.Header}>\r\n      <div className={styl.User}>\r\n        <img\r\n          className={\r\n            props.currUser.role === admRole ? styl.adminPhoto : styl.userPhoto\r\n          }\r\n          alt={\"\"}\r\n          src={\"http://mymbs.co.id/public/upload/image/user/user.png\"}\r\n        ></img>\r\n        <p>{props.currUser.email}</p>\r\n      </div>\r\n      <div className={styl.Buttons}>\r\n        <NavLink\r\n          to={{\r\n            pathname: \"/\",\r\n            state: { wantedProfile: props.currUser.email },\r\n          }}\r\n        >\r\n          <Button>\r\n            Home <HomeSharp />{\" \"}\r\n          </Button>\r\n        </NavLink>\r\n\r\n        {props.currUser.role === admRole ? (\r\n          <NavLink to=\"/control\">\r\n            <Button>\r\n              Users\r\n              <GroupIcon />\r\n            </Button>\r\n          </NavLink>\r\n        ) : null}\r\n        <Button\r\n          name=\"LogOut\"\r\n          onClick={() => {\r\n            props.clearToken();\r\n          }}\r\n        >\r\n          Log Out\r\n          <ExitToAppIcon />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styl from \"./../userboard/userprofiles/UserProfiles.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button, Select, TextField } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { fetchUsers } from \"../../apiCalls/apiCalls\";\r\nimport { usrRole,admRole } from \"../../redux/roles\";\r\n\r\nfunction UserBox(props) {\r\n  const [operation, setOperation] = useState(\"NONE\");\r\n  const [name, setName] = useState(props.user.name);\r\n  const [mail, setMail] = useState(props.user.email);\r\n  const [role, setRole] = useState(props.user.role);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (operation === \"EDIT\") {\r\n      \r\n      const changeUserResult = await fetchUsers(\"PATCH\", [\r\n        { name, email: mail, role },\r\n        {\r\n          name: props.user.name,\r\n          email: props.user.email,\r\n          role: props.user.role,\r\n        },\r\n      ]);\r\n\r\n      if (changeUserResult === false) {\r\n        alert(\"duplicate user\");\r\n      }\r\n      \r\n      fetchUsers(\"POST\").then((result) => {\r\n        props.setUsers(result);\r\n      });\r\n      setOperation(\"NONE\");\r\n    } else if (operation === \"DELETE\") {\r\n      const changeUserResult = await fetchUsers(\"DELETE\", {\r\n        name: props.user.name,\r\n        email: props.user.email,\r\n        role: props.user.role,\r\n      });\r\n\r\n      if (changeUserResult === false) {\r\n        alert(\"profile not deleted\");\r\n      }\r\n      fetchUsers().then((result) => {\r\n        setOperation(\"NONE\");\r\n        props.setUsers(result);\r\n      });\r\n    }\r\n  };\r\n\r\n  if (props.currUser.role === admRole) {\r\n    const questionButtons = [\r\n      <Button key={1}  type=\"submit\" name=\"okay\">\r\n        Okay\r\n        <CheckIcon />\r\n      </Button>,\r\n      <Button key={2} value=\"NONE\" onClick={(e) => setOperation(\"NONE\")}>\r\n        {\" \"}\r\n        Cancel\r\n        <CancelIcon />\r\n      </Button>,\r\n      null,\r\n      null,\r\n    ];\r\n    const defaultButtons = [\r\n      null,\r\n      null,\r\n      <Button key={1} value=\"EDIT\" name=\"edit\" onClick={(e) => setOperation(\"EDIT\")}>\r\n        Edit\r\n        <CreateIcon />\r\n      </Button>,\r\n      <Button\r\n        key={2}\r\n        value=\"DELETE\"\r\n        name=\"delete\"\r\n        onClick={(e) => setOperation(\"DELETE\")}\r\n      >\r\n        Delete\r\n        <DeleteIcon />\r\n      </Button>,\r\n    ];\r\n\r\n    let chosenButtons = [];\r\n\r\n    if (operation === \"NONE\") chosenButtons = defaultButtons;\r\n    else chosenButtons = questionButtons;\r\n\r\n    let boxValues = [];\r\n\r\n    const inputAreas = [\r\n      <TextField\r\n        value={name}\r\n        name=\"name\"\r\n        id=\"name\"\r\n        label=\"name\"\r\n        onChange={(e) => setName(e.target.value)}\r\n      />,\r\n      <TextField value={mail} onChange={(e) => setMail(e.target.value)} />,\r\n      <Select\r\n        id=\"roles\"\r\n        value={role}\r\n        onChange={(e) => setRole(e.target.value)}\r\n        name=\"roles\"\r\n      >\r\n        <option value={usrRole}>user</option>\r\n        <option value={admRole}>admin</option>\r\n      </Select>,\r\n    ];\r\n    const defaultNames = [\r\n      props.user ? props.user.name : \"Loading\",\r\n      props.user ? props.user.email : \"Loading\",\r\n      props.user ? props.user.role : \"Loading\",\r\n    ];\r\n\r\n    if (operation === \"EDIT\") boxValues = inputAreas;\r\n    else boxValues = defaultNames;\r\n\r\n    return (\r\n      <div className={styl.box}>\r\n        {operation === \"NONE\" ? (\r\n          <p>\r\n            <NavLink\r\n              name=\"user\"\r\n              to={{\r\n                pathname: \"/userprofiles\",\r\n                state: { wantedProfile: props.user.email },\r\n              }}\r\n            >\r\n              <img\r\n                alt={\"\"}\r\n                src=\"http://mymbs.co.id/public/upload/image/user/user.png\"\r\n              ></img>\r\n            </NavLink>\r\n          </p>\r\n        ) : null}\r\n        <form onSubmit={handleSubmit}>\r\n          <span label=\"name\" name=\"name\">\r\n            Name: {boxValues[0]}\r\n          </span>\r\n          <span>Mail: {boxValues[1]}</span>\r\n          <span className={styl.roleSelect}>Role: {boxValues[2]}</span>\r\n          {operation === \"DELETE\" ? (\r\n            <span>\r\n              Are You sure?\r\n              <br />\r\n            </span>\r\n          ) : null}\r\n          <div>{chosenButtons}</div>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else return <span>You have no access to this data.</span>;\r\n}\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n  currUser: state.authData.currUser,\r\n});\r\n\r\nlet UserBoxHOC = connect(mapStateToProps, {})(UserBox);\r\nexport default UserBoxHOC;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UserBoxHOC from \"./UserBox\";\r\nimport styl from \"./../userboard/userprofiles/UserProfiles.module.css\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport { fetchUsers } from \"../../apiCalls/apiCalls\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { admRole } from \"../../redux/roles\";\r\n\r\nfunction ControlPanel(props) {\r\n  const [Users, setUsers] = useState([]);\r\n  const [areUsersLoading, setUsersLoading] = useState(false);\r\n  useEffect(() => {\r\n    setUsersLoading(true);\r\n    const getUserList = fetchUsers(\"POST\").then((result) => {\r\n      setUsers(result);\r\n      setUsersLoading(false);\r\n    });\r\n  }, []);\r\n  if (props.currUser.role === admRole && Users) {\r\n    let UserList = [...Users].map((e, i) => (\r\n      <UserBoxHOC key={Users[i]._id} setUsers={setUsers} user={Users[i]} />\r\n    ));\r\n    return (\r\n      <div className=\"contentBlock\">\r\n        <Dashboard />\r\n        {areUsersLoading ? (\r\n          <div className=\"LoaderWrap\">\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          <div className={styl.boxGrid}>{UserList}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  } else return <span>You have no access to this page.</span>;\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  currUser: state.authData.currUser,\r\n});\r\n\r\nlet ControlPanelHOC = connect(mapStateToProps, {})(ControlPanel);\r\nexport default ControlPanelHOC;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { loginUser, regUser, getProfiles } from \"../../apiCalls/apiCalls\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setUserAC, setProfilesAC } from \"../../redux/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\nimport FormikMaterialTextField from \"./common/FormikMaterialTextField\";\r\nimport styl from \"./styles/Login.module.css\";\r\nimport { Button, Radio } from \"@material-ui/core\";\r\nimport { OfflinePinSharp } from \"@material-ui/icons/\";\r\nimport { emailValidate, passwordValidate, nameValidate } from \"./common/Validators\";\r\nimport { badEmail, reqField,badPass,badName,usedEmail,failedLogin } from \"./common/ErrorsText\";\r\nimport { usrRole } from \"../../redux/roles\";\r\n\r\nconst login = \"Login\";\r\nconst register = \"Register\";\r\n\r\n\r\n\r\nfunction validate(values, operation) {\r\n  const errors = {};\r\n  if (!values.email) {\r\n    errors.email = reqField;\r\n  } else if (!emailValidate.test(values.email)) {\r\n    errors.email = badEmail;\r\n  }\r\n  if (!values.password) {\r\n    errors.password = reqField;\r\n  } else if (!passwordValidate.test(values.password)) {\r\n    errors.password = badPass;\r\n  }\r\n  if (!values.name && operation === register) {\r\n    errors.name = reqField;\r\n  } else if (\r\n    !nameValidate.test(values.name) &&\r\n    operation === register\r\n  ) {\r\n    errors.name = badName;\r\n  }\r\n  return errors;\r\n}\r\n\r\nasync function authProcess(user, props, operation) {\r\n  if (operation === register) {\r\n    const regResponse = await regUser(\r\n      {\r\n        username: user.email,\r\n        password: user.password,\r\n        role: usrRole,\r\n        name: user.name,\r\n      },\r\n      \"POST\"\r\n    );\r\n\r\n    if (regResponse === false) {\r\n      alert(usedEmail);\r\n    }\r\n  }\r\n  const token = await loginUser(\r\n    {\r\n      username: user.email,\r\n      password: user.password,\r\n    },\r\n    \"POST\"\r\n  );\r\n  if (token[0].token) {\r\n    props.setToken(token[0]);\r\n    props.setUserAC({\r\n      email: user.email,\r\n      role: token[1],\r\n      token: token,\r\n    });\r\n    getProfiles(user.email).then((result) => {\r\n      props.setProfilesAC(result);\r\n    });\r\n  } else {\r\n    alert(failedLogin);\r\n  }\r\n}\r\n\r\nconst AuthForm = (props) => {\r\n  const [operation, setOperation] = useState(login);\r\n  return (\r\n    <Formik\r\n      className={styl.formikWrap}\r\n      initialValues={{ email: \"\", password: \"\", name: \"\" }}\r\n      validate={(values) => validate(values, operation)}\r\n      onSubmit={(user) => authProcess(user, { ...props }, operation)}\r\n    >\r\n      <Form className={styl.formikForm}>\r\n        <div>\r\n          Email:\r\n          <br />\r\n          <FormikMaterialTextField label=\"emailF\" name=\"email\" id=\"email\" />\r\n          <br />\r\n        </div>\r\n\r\n        <div>\r\n          Password:\r\n          <br />\r\n          <FormikMaterialTextField id=\"pass\" label=\"passF\" name=\"password\" />\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            <Radio\r\n              type=\"radio\"\r\n              data-testid=\"opChanger\"\r\n              onChange={(e) => setOperation(register)}\r\n              checked={operation === register}\r\n              name=\"radio\"\r\n              value=\"sign up\"\r\n            />\r\n            Sign up\r\n          </label>\r\n\r\n          <label>\r\n            <Radio\r\n              type=\"radio\"\r\n              onChange={(e) => setOperation(login)}\r\n              checked={operation === login}\r\n              name=\"radio\"\r\n              value=\"sign in\"\r\n            />\r\n            Sign in\r\n          </label>\r\n        </div>\r\n        {operation === register ? (\r\n          <div>\r\n            Name:\r\n            <br />\r\n            <FormikMaterialTextField name=\"name\" id=\"name\" label=\"nameF\" />\r\n            <br />\r\n          </div>\r\n        ) : null}\r\n        <Button data-testid=\"submitter\" type=\"submit\">\r\n          {\" \"}\r\n          <OfflinePinSharp />{\" \"}\r\n        </Button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nAuthForm.propTypes = {\r\n  setToken: PropTypes.func.isRequired,\r\n};\r\nlet mapStateToProps = (state, ownProps) => ({\r\n  setToken: ownProps.setToken,\r\n});\r\nlet AuthFormHOC = connect(mapStateToProps, { setUserAC, setProfilesAC })(\r\n  AuthForm\r\n);\r\nexport default AuthFormHOC;\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport useToken from \"./hooks/useToken\";\nimport Userboard, { AdminUserboard } from \"./components/userboard/Userboard\";\nimport { connect } from \"react-redux\";\nimport { setTokenAC, setUserAC, setProfilesAC } from \"./redux/actionCreators\";\nimport Header from \"./components/header/Header\";\nimport ControlPanelHOC from \"./components/controlpanel/ControlPanel\";\nimport AuthFormHOC from \"./components/forms/LoginForm\";\nimport { loadUserFromToken } from \"./apiCalls/apiCalls\";\n\nfunction AppMain(props) {\n  const { token, setToken, clearToken, renewToken, getToken } = useToken();\n  useEffect(() => {\n    if (token) {\n      loadUserFromToken(getToken()).then((result) => {\n        if (!result.token) {\n          clearToken();\n        } else {\n          props.setUserAC(result);\n          props.setTokenAC(renewToken(result.token, result.email));\n        }\n      });\n    }\n  }, []);\n\n  if (token && token.expiry < new Date().getTime()) {\n    clearToken();\n  }\n  if (!token) {\n    return <AuthFormHOC setToken={setToken} />;\n  } else {\n    return (\n      <div className=\"wrapper\">\n        <BrowserRouter>\n          <Header\n            currUser={props.state.authData.currUser}\n            clearToken={clearToken}\n          />\n          <Switch >\n            <Route exact path=\"/\">\n              <Userboard state={props.state} clearToken={clearToken} />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/control\">\n              <ControlPanelHOC />\n            </Route>\n            <Route path=\"/userprofiles\">\n              <AdminUserboard />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  state\n});\n\nconst App = connect(mapStateToProps, { setUserAC, setTokenAC, setProfilesAC })(\n  AppMain\n);\nexport default App;\n","import { useState } from \"react\";\r\nimport { loginUser } from \"../apiCalls/apiCalls.js\";\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem(\"token\");\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken;\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = (userToken) => {\r\n    localStorage.setItem(\"token\", JSON.stringify(userToken));\r\n    setToken(userToken);\r\n  };\r\n  const deleteToken = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setToken();\r\n  };\r\n  const renewToken = (token, email) => {\r\n    loginUser({ email }, \"PUT\").then((result) => {\r\n      setToken(result);\r\n      localStorage.setItem(\"token\", JSON.stringify(result));\r\n\r\n      return result;\r\n    });\r\n  };\r\n  return {\r\n    setToken: saveToken,\r\n    clearToken: deleteToken,\r\n    renewToken: renewToken,\r\n    getToken: getToken,\r\n    token,\r\n  };\r\n}\r\n","const SET_USER = \"SET-USER\";\r\nconst SET_TOKEN = \"SET-TOKEN\";\r\n\r\nexport let defaultUsers = {\r\n  currUser: {\r\n    email: \"testmail\",\r\n  },\r\n};\r\n\r\nexport const authReducer = (state = defaultUsers, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        currUser: action.user,\r\n      };\r\n\r\n    case SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        currUser: { ...state.currUser, token: { ...action.token } },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;\r\n","const SET_PROFILES = \"SET-PROFILES\";\r\nconst SET_LOADING_TRUE = \"SET-LOADING-TRUE\";\r\n\r\nlet defaultProfiles = {\r\n  currProfiles: [],\r\n  isLoading: false,\r\n};\r\n\r\nexport const profileReducer = (state = defaultProfiles, action) => {\r\n  switch (action.type) {\r\n    case SET_PROFILES:\r\n      return {\r\n        ...state,\r\n        currProfiles: [...action.profiles],\r\n        isLoading: false,\r\n      };\r\n    case SET_LOADING_TRUE:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default profileReducer;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport profileReducer from \"./profilesReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  authData: authReducer,\r\n  profileData: profileReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from  './redux/redux-store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n  <App state={store.getState()} dispatch={store.dispatch.bind(store)} />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Userboard\":\"UserProfiles_Userboard__2aU5Z\",\"addButton\":\"UserProfiles_addButton__Kvj31\",\"boxGrid\":\"UserProfiles_boxGrid__yR2QL\",\"box\":\"UserProfiles_box__uECKc\",\"roleSelect\":\"UserProfiles_roleSelect__3M-IR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard_Dashboard__3nbQf\",\"DashBox\":\"Dashboard_DashBox__3qhns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__DlE4a\",\"User\":\"Header_User__sI2_r\",\"adminPhoto\":\"Header_adminPhoto__1yISi\",\"userPhoto\":\"Header_userPhoto__2M3EZ\",\"Buttons\":\"Header_Buttons__1Oqka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formikWrap\":\"Login_formikWrap__2zAfX\",\"formikForm\":\"Login_formikForm__1lWvK\"};"],"sourceRoot":""}