{"version":3,"sources":["components/userboard/userprofiles/UserProfiles.module.css","components/header/Header.module.css","components/login/Login.module.css","components/dashboard/Dashboard.module.css","components/dashboard/Dashboard.jsx","redux/actionCreators.js","components/forms/LoginForm.jsx","components/login/Login.jsx","components/userboard/userprofiles/ProfileBox.jsx","components/userboard/userprofiles/UserProfiles.jsx","components/userboard/Userboard.jsx","components/header/Header.jsx","components/controlpanel/UserBox.jsx","components/controlpanel/ControlPanel.jsx","App.js","hooks/useToken.js","reportWebVitals.js","redux/authReducer.js","redux/profilesReducer.js","redux/redux-store.js","index.js"],"names":["module","exports","Dashboard","useState","users","pofiles","matureProfiles","stats","setStats","useEffect","fetch","method","headers","body","then","data","json","res","profiles","console","log","className","styl","setUserAC","User","type","user","setProfilesAC","AuthForm","operation","setOperation","initialValues","email","password","name","validate","values","errors","test","onSubmit","error","onChange","e","checked","value","loginUser","credentials","a","JSON","stringify","regUser","Login","connect","state","ownProps","setToken","props","username","setUserName","setName","setPassword","role","setRole","handleSubmit","preventDefault","alert","token","getProfiles","result","loginWrapper","target","id","htmlFor","submitButton","ProfileBoxHOC","surname","setSurname","age","setAge","profileChange","author","currUser","questionButtons","onClick","defaultButtons","chosenButtons","boxValues","inputAreas","parseInt","defaultNames","box","alt","src","profile","HocUserProfiles","authData","profileList","profileData","currProfiles","wantedUser","userboxes","map","el","_id","Userboard","addButton","boxGrid","AdminUserboard","location","useLocation","setWantedUser","wantedProfile","Header","adminPhoto","userPhoto","Buttons","to","pathname","clearToken","UserBoxHOC","mail","setMail","fetchUsers","setUsers","catch","err","ControlPanelHOC","Users","UserList","i","loadUserFromToken","fetchUser","App","setTokenAC","getToken","tokenString","localStorage","getItem","parse","userToken","setItem","removeItem","renewToken","useToken","expiry","Date","getTime","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER","SET_TOKEN","defaultUsers","authReducer","action","SET_PROFILES","defaultProfiles","profileReducer","reducers","combineReducers","store","createStore","ReactDOM","render","getState","dispatch","bind","document","getElementById"],"mappings":"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","file":"static/js/main.4c4ec93a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Userboard\":\"UserProfiles_Userboard__2aU5Z\",\"addButton\":\"UserProfiles_addButton__Kvj31\",\"boxGrid\":\"UserProfiles_boxGrid__yR2QL\",\"box\":\"UserProfiles_box__uECKc\",\"submitButton\":\"UserProfiles_submitButton__2h4H9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__DlE4a\",\"User\":\"Header_User__sI2_r\",\"adminPhoto\":\"Header_adminPhoto__1yISi\",\"userPhoto\":\"Header_userPhoto__2M3EZ\",\"Buttons\":\"Header_Buttons__1Oqka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__1vxml\",\"submitButton\":\"Login_submitButton__19lq8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard_Dashboard__3nbQf\"};","import React, { useEffect,useState } from 'react';\r\nimport styl from './Dashboard.module.css'\r\n\r\nexport function  getStats(){\r\n  return fetch('/api/stats',{method:\"POST\",\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  body:null\r\n}).then(data => \r\n      data.json())\r\n}\r\n\r\nexport default function Dashboard() {\r\n    const [stats,setStats]=useState({users:0,pofiles:0,matureProfiles:0});\r\n    useEffect(()=>{\r\n        getStats().then(res =>{\r\n            setStats({users:res[0],profiles:res[1],matureProfiles:res[2]});\r\n            console.log({users:res[0],profiles:res[1],matureProfiles:res[2]})\r\n        })\r\n    },[])\r\n  return(<div className={styl.Dashboard}>\r\n  <div><h2>Dashboard</h2></div>\r\n      <div>Users:<br/><span>{stats.users}</span></div>  <div>Profiles:<br/> <span>{stats.profiles}</span></div>  <div>Profiles older than 18:<br/> <span>{stats.matureProfiles}</span></div>\r\n    \r\n    </div>\r\n  );\r\n}","export const setUserAC = (User) => ({type:\"SET-USER\",user:User});\r\nexport const setProfilesAC = (profiles) => ({type:\"SET-PROFILES\",profiles:profiles});\r\nexport const setTokenAC = (token) => ({type:\"SET-TOKEN\",token:token});\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\n\r\nconst AuthForm = () => {\r\n  const [operation, setOperation] = useState(\"Login\");\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", name: \"\" }}\r\n      validate={values =>{\r\n          const errors={};\r\n          if (!values.email) {\r\n           errors.email = 'Required';\r\n         } else if (\r\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n         ) {\r\n           errors.email = 'Invalid email address';\r\n         }\r\n\r\n\r\n\r\n\r\n         return errors;\r\n      }}\r\n      onSubmit={(user) => {\r\n          console.log(user)\r\n      }}\r\n    >\r\n      {({ error }) => (\r\n        <div>\r\n          <h1>Any place in your app!</h1>\r\n          <Form>\r\n            <Field name=\"email\" />\r\n            {error.email}\r\n            <Field name=\"password\" />\r\n            {error.password}\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                onChange={(e) => setOperation(\"Register\")}\r\n                checked={operation === \"Register\"}\r\n                name=\"radio\"\r\n                value=\"sign up\"\r\n              />\r\n              Sign up\r\n              \r\n            </label>\r\n\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                onChange={(e) => setOperation(\"Login\")}\r\n                checked={operation === \"Login\"}\r\n                name=\"radio\"\r\n                value=\"sign in\"\r\n              />\r\n              Sign in\r\n            </label>\r\n            <Field name=\"name\" />\r\n            <button type=\"submit\">Submit</button>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styl from \"./Login.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setUserAC, setProfilesAC } from \"../../redux/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfiles } from \"../../App\";\r\nimport AuthForm from \"../forms/LoginForm\";\r\n\r\nexport async function loginUser(credentials, method) {\r\n  return fetch(\"/api/login\", {\r\n    method: method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nexport async function regUser(credentials, method) {\r\n  return fetch(\"/api/register\", {\r\n    method: method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nfunction LoginMain(props) {\r\n  const [username, setUserName] = useState();\r\n  const [name, setName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [role, setRole] = useState();\r\n  const [operation, setOperation] = useState();\r\n  useEffect(() => {\r\n    setOperation(\"Login\");\r\n    setRole(\"USER\")\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (operation === \"Register\") {\r\n      const regResponse = await regUser(\r\n        {\r\n          username,\r\n          password,\r\n          role,\r\n          name,\r\n        },\r\n        \"POST\"\r\n      );\r\n\r\n      if (regResponse === false) {\r\n        alert(\"Email already registered\");\r\n      }\r\n    }\r\n    const token = await loginUser(\r\n      {\r\n        username,\r\n        password,\r\n      },\r\n      \"POST\"\r\n    );\r\n    if (token[0].token) {\r\n      props.setToken(token[0]);\r\n      props.setUserAC({\r\n        email: username,\r\n        role: token[1],\r\n        token: token,\r\n      });\r\n      getProfiles(username).then((result) => {\r\n        props.setProfilesAC(result);\r\n      });\r\n    } else {\r\n      alert(\"Login failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styl.loginWrapper}>\r\n      <h1>Please Log In</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <p>Username</p>\r\n          <input type=\"text\" name=\"Username\" onChange={(e) => setUserName(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          <p>Password</p>\r\n          <input\r\n            type=\"password\" name=\"Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n        {operation === \"Register\" ? (\r\n          <div>\r\n            <label>\r\n              <p>Name</p>\r\n              <input type=\"text\"  onChange={(e) => setName(e.target.value)} />\r\n            </label>\r\n            <label>\r\n              <p>Role</p>\r\n              <select id=\"roles\" onChange={(e) => setRole(e.target.value)} name=\"roles\">\r\n                <option value=\"USER\">User</option>\r\n                <option value=\"ADMIN\">Admin</option>\r\n              </select>\r\n            </label>\r\n          </div>\r\n        ) : null}\r\n        <div>\r\n          <input\r\n            type=\"radio\"\r\n            checked={operation === \"Login\"}\r\n            id=\"operationChoice1\"\r\n            name=\"operation\"\r\n            onChange={(e) => setOperation(e.target.value)}\r\n            value=\"Login\"\r\n          />\r\n          <label htmlFor=\"operationChoice1\">Login</label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={operation === \"Register\"}\r\n            id=\"operationChoice2\"\r\n            name=\"operation\"\r\n            onChange={(e) => setOperation(e.target.value)}\r\n            value=\"Register\"\r\n          />\r\n          <label htmlFor=\"operationChoice2\">Register</label>\r\n        </div>\r\n        <div>\r\n          <button className={styl.submitButton} type=\"submit\">Let's go</button>\r\n        </div>\r\n      </form>\r\n\r\n\r\n          <AuthForm/>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nLoginMain.propTypes = {\r\n  setToken: PropTypes.func.isRequired,\r\n};\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n  state: state,\r\n  setToken: ownProps.setToken,\r\n});\r\nlet Login = connect(mapStateToProps, { setUserAC, setProfilesAC })(LoginMain);\r\nexport default Login;\r\n","import { Check, Close, Pen, Trash } from 'css.gg';\r\nimport React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { getProfiles } from '../../../App';\r\nimport {setProfilesAC} from '../../../redux/actionCreators'\r\nimport { profileChange } from './UserProfiles';\r\nimport styl from './UserProfiles.module.css'\r\n\r\n function ProfileBox(props) {\r\n    const [operation, setOperation] = useState(\"NONE\");\r\n    const [name, setName] = useState(props.name);\r\n    const [surname, setSurname] = useState(props.surname);\r\n    const [age, setAge] = useState(props.age);\r\n    \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(operation === 'EDIT'){\r\n            const changeProfileResult = await profileChange(\r\n                [{name,surname,age,author:props.author},{name:props.name,surname:props.surname,age:props.age,author:props.author}],\"PATCH\"\r\n            )\r\n            if(changeProfileResult===false){\r\n                alert(\"duplicate profile\")\r\n            }\r\n        getProfiles(props.currUser).then((result)=>{\r\n            props.setProfilesAC(result)\r\n            setOperation(\"NONE\")\r\n          })\r\n      }\r\n      else if(operation === 'DELETE'){\r\n        const changeProfileResult = await profileChange(\r\n            {name:props.name,surname:props.surname,age:props.age,author:props.author},\"DELETE\"\r\n        )\r\n        if(changeProfileResult===false){\r\n            alert(\"profile not deleted\")\r\n        }\r\n    getProfiles(props.currUser).then((result)=>{\r\n        props.setProfilesAC(result)\r\n        setOperation(\"NONE\")\r\n      })\r\n  }\r\n\r\n    }\r\n    const questionButtons = [(<button type=\"submit\" name=\"okay\"><Check/>Okay</button>),(<button value=\"NONE\" onClick={e => setOperation(\"NONE\")}><Close/> Cancel</button>),null,null]\r\n    const defaultButtons =[null,null,(<button value=\"EDIT\" name=\"edit\" onClick={e=>setOperation(\"EDIT\")}><Pen/>Edit</button>),(<button value=\"DELETE\" name=\"delete\" onClick={e=>setOperation(\"DELETE\")}><Trash/>Delete</button>)]\r\n    \r\n    let chosenButtons = [];\r\n    \r\n    if(operation ===\"NONE\") chosenButtons=defaultButtons    \r\n    else chosenButtons=questionButtons\r\n\r\n    let boxValues = []\r\n\r\n    const inputAreas =[(<textarea value={name} name=\"name\" onChange={e => setName(e.target.value)}/>),(<textarea value={surname} onChange={e => setSurname(e.target.value)}/>),(<textarea type=\"number\" value={age} onChange={e => setAge(parseInt(e.target.value))}/>)]\r\n    const defaultNames=[(props.name ? props.name: \"Loading\"),(props.surname ? props.surname: \"Loading\"),(props.age ? props.age: \"Loading\")]\r\n\r\n    if(operation ===\"EDIT\") boxValues=inputAreas\r\n    else boxValues=defaultNames\r\n\r\n    return(\r\n        <div className={styl.box}>\r\n        \r\n            <p><a><img alt={\"\"} src='http://mymbs.co.id/public/upload/image/user/user.png'></img></a></p>\r\n            <form onSubmit={handleSubmit} >\r\n            <span>Name: {boxValues[0]}</span>\r\n            <span>Surname: {boxValues[1]}</span>\r\n            <span>Age: {boxValues[2]}</span>\r\n            {operation===\"DELETE\" ? (<span>Are You sure?<br/></span>) : null}\r\n            <div>\r\n            {chosenButtons}\r\n            </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => ({\r\n\r\n}) \r\n\r\nlet ProfileBoxHOC = connect(mapStateToProps,{setProfilesAC})(ProfileBox)\r\nexport default  ProfileBoxHOC;\r\n","import { connect } from \"react-redux\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport {setProfilesAC} from './../../../redux/actionCreators'\r\n\r\nimport { getProfiles } from \"../../../App\"\r\n\r\nimport styl from './UserProfiles.module.css'\r\nimport ProfileBoxHOC from \"./ProfileBox\"\r\nimport { Add } from \"css.gg\"\r\n\r\n\r\nexport async function profileChange(profile,method) {\r\n    return fetch('/api/profiles', {\r\n      method: method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(profile)\r\n    })\r\n      .then(data => data.json())\r\n   }\r\n\r\n\r\nfunction UserProfiles(props){\r\n    const [operation, setOperation] = useState();\r\n    const [name, setName] = useState();\r\n    const [surname, setSurname] = useState();\r\n    const [age, setAge] = useState();\r\n    \r\n    let username=(props.wantedUser? props.wantedUser: props.currUser.email);\r\n\r\n    useEffect(() => {\r\n        props.setProfilesAC([])\r\n            if(props.wantedUser){\r\n                getProfiles(props.wantedUser).then(profiles =>{\r\n\r\n                    props.setProfilesAC(profiles)\r\n                })\r\n                \r\n\r\n            }\r\n            else{\r\n\r\n                getProfiles(props.currUser.email).then(profiles =>{\r\n\r\n                    props.setProfilesAC(profiles)\r\n                })\r\n            }\r\n    },[username])\r\n\r\n    const handleSubmit = async e => {\r\n        \r\n        e.preventDefault();\r\n        if(operation ===\"ADD\"){\r\n            const addProfileResult = await profileChange(\r\n                {name,surname,age,author:(props.wantedUser ? props.wantedUser : props.currUser.email)},\"PUT\"\r\n            )\r\n\r\n            if(addProfileResult===false){\r\n                alert(\"duplicate profile\")\r\n            }\r\n            getProfiles(username).then((result)=>{\r\n                props.setProfilesAC(result)\r\n                setOperation(\"NONE\")\r\n              })\r\n        }\r\n      }\r\n\r\n    \r\n        \r\n       \r\n     \r\n    let userboxes = [...props.profileList].map(el => <ProfileBoxHOC  key={el._id} currUser={(props.wantedUser ? props.wantedUser : props.currUser.email)} name={el.name} surname={el.surname} age={el.age} author={el.author}/>)\r\nreturn(\r\n    <div>\r\n        <div className={styl.Userboard}>\r\n        <div name=\"Greeting\">\r\n        Welcome, {props.currUser.email}!<br/>\r\n        Browsing, {(props.wantedUser ? props.wantedUser : props.currUser.email)} profiles </div>\r\n\r\n        \r\n        {operation === \"ADD\" ? <form onSubmit={handleSubmit} >\r\n        <label>\r\n          <p>Name</p>\r\n          <input type=\"text\" name='name' onChange={e => setName(e.target.value)}/>\r\n        </label>\r\n        <label>\r\n          <p>Surname</p>\r\n          <input type=\"text\" name='surname' onChange={e => setSurname(e.target.value)}/>\r\n        </label>\r\n        <label>\r\n          <p>Age</p>\r\n          <input type=\"number\" name='age' onChange={e => setAge(parseInt(e.target.value))}/>\r\n        </label>\r\n        <div>\r\n          <button type=\"submit\" className={styl.submitButton}>Submit</button>\r\n          <button className={styl.submitButton} onClick={()=>{setOperation(\"NONE\")}}>Cancel</button>\r\n        </div>\r\n      </form> : <button className={styl.addButton} id=\"ADD\"  value=\"ADD\" onClick={e => setOperation(e.target.value)}><Add/>Add Profile</button> }\r\n          </div>\r\n        <div className={styl.boxGrid}>{userboxes}</div>\r\n    </div>\r\n)\r\n\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => {\r\n    \r\n        return({\r\n            currUser:state.authData.currUser, \r\n            profileList:state.profileData.currProfiles\r\n        })\r\n    }\r\n    \r\n\r\n\r\n\r\nlet HocUserProfiles = connect(mapStateToProps,{setProfilesAC})(UserProfiles)\r\nexport default HocUserProfiles ","import React,{useEffect, useState} from 'react';\r\nimport HocUserProfiles from './userprofiles/UserProfiles';\r\nimport {useLocation} from 'react-router-dom'\r\n\r\n\r\nexport default function Userboard(props) {\r\n    \r\n  return(<div >\r\n  \r\n    <HocUserProfiles wantedUser={props.state.authData.currUser ? props.state.authData.currUser.email : null} />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport function AdminUserboard(props) {\r\n    let location = useLocation();\r\n\r\n      const [wantedUser, setWantedUser] = useState();\r\n      useEffect(()=>{\r\n        setWantedUser(location.state.wantedProfile)\r\n      },[])\r\n      \r\n    return(\r\n        <div>\r\n\r\n    <HocUserProfiles wantedUser={wantedUser ? wantedUser : null} />\r\n    </div>\r\n    )\r\n}","import { Controller, Eye, Home, LogOff, LogOut } from 'css.gg'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styl from './Header.module.css'\r\n\r\nexport default  function Header(props){\r\n    return(\r\n        <div className={styl.Header}>\r\n        <div className={styl.User}><img className={props.currUser.role === 'ADMIN' ? styl.adminPhoto : styl.userPhoto} alt={\"\"} src={\"http://mymbs.co.id/public/upload/image/user/user.png\"}></img><p>{props.currUser.email}</p></div>\r\n        <div className={styl.Buttons}>\r\n        <NavLink to={{\r\n   pathname:'/',\r\n   state: {wantedProfile:props.currUser.email}  \r\n }}><Home/>Home</NavLink>\r\n            \r\n            {props.currUser.role === 'ADMIN' ? <NavLink to=\"/control\"><Eye/>Control</NavLink>:null}\r\n            <a name=\"LogOut\" onClick={()=>{props.clearToken()}}><LogOff/>Log Out</a>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n    \r\n\r\n\r\n}","import React,{ useState} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {fetchUsers} from './ControlPanel'\r\nimport styl from './../userboard/userprofiles/UserProfiles.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Check, Close, Pen, Trash } from 'css.gg'\r\n\r\n\r\nfunction UserBox(props) {\r\n     \r\n    const [operation, setOperation] = useState(\"NONE\");\r\n    const [name, setName] = useState(props.user.name);\r\n    const [mail, setMail] = useState(props.user.email);\r\n    const [role, setRole] = useState(props.user.role);\r\n  \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(operation === 'EDIT'){\r\n            const changeUserResult = await fetchUsers(\r\n                \"PATCH\", [{name,email:mail,role},{name:props.user.name,email:props.user.email,role:props.user.role}]\r\n            )\r\n\r\n            if(changeUserResult===false){\r\n                alert(\"duplicate user\")\r\n            }\r\n            fetchUsers(\"POST\").then((result)=>{\r\n            \r\n            props.setUsers(result) })\r\n            setOperation(\"NONE\")\r\n         \r\n        \r\n        \r\n      }\r\n      else if(operation === 'DELETE'){\r\n        const changeUserResult = await fetchUsers(\r\n            \"DELETE\", {name:props.user.name,email:props.user.email,role:props.user.role}\r\n        )\r\n\r\n        if(changeUserResult===false){\r\n            alert(\"profile not deleted\")\r\n        }\r\n        fetchUsers().then((result)=>{\r\n            setOperation(\"NONE\")\r\n            props.setUsers(result)\r\n            \r\n          })\r\n    \r\n    \r\n  }\r\n\r\n    }\r\n\r\n    \r\n\r\n   if(props.currUser.role === 'ADMIN'){\r\n    //\r\n    const questionButtons = [(<button type=\"submit\" name=\"okay\"><Check/>Okay</button>),(<button value=\"NONE\" onClick={e => setOperation(\"NONE\")}><Close/> Cancel</button>),null,null]\r\n    const defaultButtons =[null,null,(<button value=\"EDIT\" name=\"edit\" onClick={e=>setOperation(\"EDIT\")}><Pen/>Edit</button>),(<button value=\"DELETE\" name=\"delete\" onClick={e=>setOperation(\"DELETE\")}><Trash/>Delete</button>)]\r\n    \r\n    let chosenButtons = [];\r\n    \r\n    if(operation ===\"NONE\") chosenButtons=defaultButtons    \r\n    else chosenButtons=questionButtons\r\n\r\n    let boxValues = []\r\n\r\n    const inputAreas =[(<textarea value={name} name=\"name\" onChange={e => setName(e.target.value)}/>),(<textarea value={mail} onChange={e => setMail(e.target.value)}/>),( <select  id=\"roles\" onChange={(e) => setRole(e.target.value)} name=\"roles\"><option value=\"USER\">USER</option><option value=\"ADMIN\">ADMIN</option></select>)]\r\n    const defaultNames=[(props.user? props.user.name: \"Loading\"),(props.user ? props.user.email: \"Loading\"),( props.user ? props.user.role: \"Loading\")]\r\n\r\n    if(operation ===\"EDIT\") boxValues=inputAreas\r\n    else boxValues=defaultNames\r\n    //\r\n  return(<div className={styl.box}>\r\n        <p>\r\n        <NavLink name=\"user\" to={{\r\n   pathname:'/userprofiles',\r\n   state: {wantedProfile:props.user.email}  \r\n }}><img alt={\"\"} src='http://mymbs.co.id/public/upload/image/user/user.png'></img></NavLink></p>\r\n    <form onSubmit={handleSubmit} >\r\n    <span>Name: {boxValues[0]}</span>\r\n    <span>Mail: {boxValues[1]}</span>\r\n    <span>Role: {boxValues[2]}</span>\r\n    {operation===\"DELETE\" ? (<span>Are You sure?<br/></span>) : null}\r\n    <div>\r\n    {chosenButtons}\r\n    </div>\r\n    </form>\r\n</div>\r\n  );\r\n   }\r\n   else return (<span>You have no access to this data.</span>)\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => ({\r\n    currUser:state.authData.currUser\r\n\r\n})\r\n\r\nlet UserBoxHOC =connect(mapStateToProps,{})(UserBox)\r\nexport default UserBoxHOC\r\n","import React, { useEffect, useState } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport UserBoxHOC from './UserBox';\r\nimport styl from './../userboard/userprofiles/UserProfiles.module.css'\r\nimport Dashboard from '../dashboard/Dashboard';\r\n\r\nexport async function fetchUsers(method,user=null) {\r\n \r\n  return fetch('/api/admin', {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({user})\r\n  })\r\n    .then(data => data.json()).catch(err =>{return err})\r\n }\r\n\r\n\r\n function ControlPanel(props) {\r\n  \r\n   const [Users,setUsers]=useState();\r\n   useEffect(()=>{\r\n     setUsers([])\r\n      const getUserList = fetchUsers(\"POST\").then(result =>{\r\n\r\n        setUsers(result)\r\n\r\n\r\n      })\r\n\r\n   },[])\r\n   if(props.currUser.role === 'ADMIN' && Users){\r\n     \r\n     let UserList = [...Users].map((e,i) => <UserBoxHOC key={Users[i]._id} setUsers={setUsers} user={Users[i]}/>)\r\n  return(<div>\r\n    \r\n   \r\n    <Dashboard/>\r\n    <div className={styl.boxGrid}>{UserList}</div>\r\n    </div>\r\n  );\r\n   }\r\n   else return (<span>You have no access to this page.</span>)\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  currUser:state.authData.currUser\r\n\r\n})\r\n\r\nlet ControlPanelHOC =connect(mapStateToProps,{})(ControlPanel)\r\nexport default ControlPanelHOC","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Login from './components/login/Login';\nimport useToken from './hooks/useToken';\nimport Userboard,{AdminUserboard} from './components/userboard/Userboard';\nimport {connect } from 'react-redux';\nimport { setTokenAC, setUserAC, setProfilesAC } from './redux/actionCreators';\nimport Header from './components/header/Header';\nimport ControlPanelHOC from './components/controlpanel/ControlPanel';\n\n\nasync function fetchUser(token) {\n\n  return fetch('/api/login', {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(token)\n  })\n    .then(data => data.json()).catch(err =>{return err})\n }\n\nfunction loadUserFromToken(token){\n  return fetchUser(token).then((result,err)=>{\n    \n    if (!err){\n\n    \n    return result\n    }\n    else {\n      return false\n    }\n    \n    \n  })\n\n  \n}\n\nexport async function  getProfiles(email){\n  return fetch('/api/profiles', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email:email})\n  })\n    .then(data => data.json())\n}\n\n\n\n\nfunction AppMain(props) {\n \n  const { token, setToken, clearToken, renewToken, getToken } = useToken();\n  useEffect(()=>{\n      if(token){\n      loadUserFromToken(getToken()).then((result)=>{\n        if(!result.token){\n          clearToken()\n        }\n        else{\n\n          props.setUserAC(result)\n          props.setTokenAC(renewToken(result.token,result.email))\n\n          getProfiles(result.email).then((result)=>{\n            props.setProfilesAC(result)\n          })\n          \n          \n        }\n      })\n\n      \n    }\n      },[]\n  )\n \n  if (token && token.expiry < (new Date()).getTime()) {\n    clearToken()\n  }\n  if(!token ) {\n    \n    return <Login  setToken={setToken} />\n  }\n  else{\n\n    \n  return (\n    \n      <div className=\"wrapper\">\n        \n        \n        <BrowserRouter>\n          <Header currUser={props.state.authData.currUser} clearToken={clearToken}/>\n          <Switch>\n          <Route exact path=\"/\">\n              <Userboard  state={props.state}  clearToken={clearToken} />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/control\">\n              <ControlPanelHOC />\n            </Route>\n            <Route path=\"/userprofiles\">\n              <AdminUserboard />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n        \n      </div>\n      \n    );\n  }\n}\n\nlet mapStateToProps = (state) =>({\n  state:state\n})\n\nconst App = connect(mapStateToProps,{setUserAC,setTokenAC,setProfilesAC})(AppMain)\nexport default App;\n","import { useState } from 'react';\r\nimport { loginUser } from '../components/login/Login';\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken);\r\n  };\r\n  const deleteToken = () => {\r\n      localStorage.removeItem('token');\r\n      setToken();\r\n  }\r\n  const renewToken = (token,email)=>{\r\n    loginUser({email},\"PUT\").then((result)=>{\r\n        setToken(result)\r\n        localStorage.setItem('token', JSON.stringify(result));\r\n\r\n        return result\r\n    })\r\n}\r\n  return {\r\n    \r\n    setToken: saveToken,\r\n    clearToken: deleteToken,\r\n    renewToken: renewToken,\r\n    getToken: getToken,\r\n    token\r\n  }\r\n\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const SET_USER = \"SET-USER\"\r\nconst SET_TOKEN = \"SET-TOKEN\"\r\n\r\nlet defaultUsers = {\r\n\r\n    currUser:{\r\n            \r\n            },\r\n           \r\n            \r\n          \r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport const authReducer = (state=defaultUsers,action)=>{\r\n    \r\n    \r\n    switch(action.type){\r\n        case SET_USER:\r\n\r\n            \r\n            \r\n                return({\r\n                    ...state,currUser: action.user\r\n                })\r\n                \r\n        case SET_TOKEN:\r\n\r\n                        return({\r\n                            ...state,currUser: {...state.currUser,token:{...action.token}}\r\n                        })\r\n                    \r\n        default:\r\n            return state\r\n\r\n    }\r\n    \r\n    \r\n\r\n\r\n}\r\nexport default authReducer;","const SET_PROFILES = \"SET-PROFILES\"\r\n\r\nlet defaultProfiles = {\r\n\r\n    currProfiles:[]\r\n            \r\n            \r\n           \r\n            \r\n          \r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport const profileReducer = (state=defaultProfiles,action)=>{\r\n    \r\n   \r\n    switch(action.type){\r\n        case SET_PROFILES:\r\n\r\n                return({\r\n                    ...state,currProfiles: [...action.profiles]\r\n                })\r\n            \r\n        default:\r\n            return state\r\n\r\n    }\r\n    \r\n    \r\n\r\n\r\n}\r\nexport default profileReducer;","import { combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport profileReducer from \"./profilesReducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    authData: authReducer,\r\n    profileData: profileReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\n\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from  './redux/redux-store'\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <App state={store.getState()} dispatch={store.dispatch.bind(store)} />\n  </Provider>\n  ,\n  document.getElementById('root')\n  \n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}