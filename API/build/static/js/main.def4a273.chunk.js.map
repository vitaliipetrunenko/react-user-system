{"version":3,"sources":["components/userboard/userprofiles/UserProfiles.module.css","components/header/Header.module.css","components/forms/styles/Login.module.css","components/dashboard/Dashboard.module.css","components/dashboard/Dashboard.jsx","apiCalls/apiCalls.js","redux/actionCreators.js","components/userboard/userprofiles/ProfileBox.jsx","components/userboard/userprofiles/UserProfiles.jsx","components/userboard/Userboard.jsx","components/header/Header.jsx","components/controlpanel/UserBox.jsx","components/controlpanel/ControlPanel.jsx","components/forms/common/FormikMaterialTextField.jsx","components/forms/LoginForm.jsx","App.js","hooks/useToken.js","reportWebVitals.js","redux/authReducer.js","redux/profilesReducer.js","redux/redux-store.js","index.js"],"names":["module","exports","Dashboard","useState","users","pofiles","matureProfiles","stats","setStats","useEffect","fetch","method","headers","body","then","data","json","res","profiles","console","log","className","styl","loginUser","credentials","a","JSON","stringify","regUser","token","catch","err","loadUserFromToken","fetchUser","result","getProfiles","email","profileChange","profile","setUserAC","User","type","user","setProfilesAC","ProfileBoxHOC","connect","state","ownProps","props","operation","setOperation","name","setName","surname","setSurname","age","setAge","handleSubmit","e","preventDefault","author","alert","currUser","questionButtons","Button","value","onClick","defaultButtons","chosenButtons","boxValues","inputAreas","TextField","onChange","target","parseInt","defaultNames","box","alt","src","onSubmit","HocUserProfiles","authData","profileList","profileData","currProfiles","username","wantedUser","userboxes","map","el","_id","Userboard","submitButton","addButton","id","boxGrid","AdminUserboard","location","useLocation","setWantedUser","wantedProfile","Header","role","adminPhoto","userPhoto","Buttons","to","pathname","clearToken","UserBoxHOC","mail","setMail","setRole","fetchUsers","setUsers","Select","ControlPanelHOC","Users","UserList","i","FormikMaterialTextField","formik","useFormikContext","error","errors","values","onInput","handleChange","onBlur","handleBlur","authProcess","password","regResponse","setToken","AuthFormHOC","formikWrap","initialValues","validate","test","formikForm","Radio","checked","App","setTokenAC","getToken","tokenString","localStorage","getItem","parse","userToken","setItem","removeItem","renewToken","useToken","expiry","Date","getTime","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER","SET_TOKEN","defaultUsers","authReducer","action","SET_PROFILES","defaultProfiles","profileReducer","reducers","combineReducers","store","createStore","ReactDOM","render","getState","dispatch","bind","document","getElementById"],"mappings":"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","file":"static/js/main.def4a273.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Userboard\":\"UserProfiles_Userboard__2aU5Z\",\"addButton\":\"UserProfiles_addButton__Kvj31\",\"boxGrid\":\"UserProfiles_boxGrid__yR2QL\",\"box\":\"UserProfiles_box__uECKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__DlE4a\",\"User\":\"Header_User__sI2_r\",\"adminPhoto\":\"Header_adminPhoto__1yISi\",\"userPhoto\":\"Header_userPhoto__2M3EZ\",\"Buttons\":\"Header_Buttons__1Oqka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formikWrap\":\"Login_formikWrap__2zAfX\",\"formikForm\":\"Login_formikForm__1lWvK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard_Dashboard__3nbQf\"};","import React, { useEffect,useState } from 'react';\r\nimport styl from './Dashboard.module.css'\r\n\r\nexport function  getStats(){\r\n  return fetch('/api/stats',{method:\"POST\",\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  body:null\r\n}).then(data => \r\n      data.json())\r\n}\r\n\r\nexport default function Dashboard() {\r\n    const [stats,setStats]=useState({users:0,pofiles:0,matureProfiles:0});\r\n    useEffect(()=>{\r\n        getStats().then(res =>{\r\n            setStats({users:res[0],profiles:res[1],matureProfiles:res[2]});\r\n            console.log({users:res[0],profiles:res[1],matureProfiles:res[2]})\r\n        })\r\n    },[])\r\n  return(<div className={styl.Dashboard}>\r\n  <div><h2>Dashboard</h2></div>\r\n      <div>Users:<br/><span>{stats.users}</span></div>  <div>Profiles:<br/> <span>{stats.profiles}</span></div>  <div>Profiles older than 18:<br/> <span>{stats.matureProfiles}</span></div>\r\n    \r\n    </div>\r\n  );\r\n}","export async function loginUser(credentials, method) {\r\n    return fetch(\"/api/login\", {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    }).then((data) => data.json());\r\n  }\r\n  \r\n  export async function regUser(credentials, method) {\r\n    return fetch(\"/api/register\", {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    }).then((data) => data.json());\r\n  }\r\n\r\n export async function fetchUser(token) {\r\n\r\n    return fetch('/api/login', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(token)\r\n    })\r\n      .then(data => data.json()).catch(err =>{return err})\r\n   }\r\n  \r\n export function loadUserFromToken(token){\r\n    return fetchUser(token).then((result,err)=>{\r\n      \r\n      if (!err){\r\n  \r\n      \r\n      return result\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n      \r\n      \r\n    })\r\n  \r\n    \r\n  }\r\n  \r\n  export async function  getProfiles(email){\r\n    return fetch('/api/profiles', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({email:email})\r\n    })\r\n      .then(data => data.json())\r\n  }\r\n  \r\n  export function  getStats(){\r\n    alert(\"alert\")\r\n    return fetch('/api/stats', {\r\n      method: 'GET',\r\n    })\r\n      .then(data => data.json())\r\n  }\r\n  \r\n  export async function profileChange(profile,method) {\r\n    return fetch('/api/profiles', {\r\n      method: method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(profile)\r\n    })\r\n      .then(data => data.json())\r\n   }","export const setUserAC = (User) => ({type:\"SET-USER\",user:User});\r\nexport const setProfilesAC = (profiles) => ({type:\"SET-PROFILES\",profiles:profiles});\r\nexport const setTokenAC = (token) => ({type:\"SET-TOKEN\",token:token});\r\n\r\n\r\n","import { Button, TextField } from '@material-ui/core';\r\nimport { Check, Close, Pen, Trash } from 'css.gg';\r\nimport React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { getProfiles,profileChange } from '../../../apiCalls/apiCalls';\r\nimport {setProfilesAC} from '../../../redux/actionCreators'\r\nimport styl from './UserProfiles.module.css'\r\n\r\n function ProfileBox(props) {\r\n    const [operation, setOperation] = useState(\"NONE\");\r\n    const [name, setName] = useState(props.name);\r\n    const [surname, setSurname] = useState(props.surname);\r\n    const [age, setAge] = useState(props.age);\r\n    \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(operation === 'EDIT'){\r\n            const changeProfileResult = await profileChange(\r\n                [{name,surname,age,author:props.author},{name:props.name,surname:props.surname,age:props.age,author:props.author}],\"PATCH\"\r\n            )\r\n            if(changeProfileResult===false){\r\n                alert(\"duplicate profile\")\r\n            }\r\n        getProfiles(props.currUser).then((result)=>{\r\n            props.setProfilesAC(result)\r\n            setOperation(\"NONE\")\r\n          })\r\n      }\r\n      else if(operation === 'DELETE'){\r\n        const changeProfileResult = await profileChange(\r\n            {name:props.name,surname:props.surname,age:props.age,author:props.author},\"DELETE\"\r\n        )\r\n        if(changeProfileResult===false){\r\n            alert(\"profile not deleted\")\r\n        }\r\n    getProfiles(props.currUser).then((result)=>{\r\n        props.setProfilesAC(result)\r\n        setOperation(\"NONE\")\r\n      })\r\n  }\r\n\r\n    }\r\n    const questionButtons = [(<Button type=\"submit\" name=\"okay\"><Check/>Okay</Button>),(<Button value=\"NONE\" onClick={e => setOperation(\"NONE\")}><Close/> Cancel</Button>),null,null]\r\n    const defaultButtons =[null,null,(<Button value=\"EDIT\" name=\"edit\" onClick={e=>setOperation(\"EDIT\")}><Pen/>Edit</Button>),(<Button value=\"DELETE\" name=\"delete\" onClick={e=>setOperation(\"DELETE\")}><Trash/>Delete</Button>)]\r\n    \r\n    let chosenButtons = [];\r\n    \r\n    if(operation ===\"NONE\") chosenButtons=defaultButtons    \r\n    else chosenButtons=questionButtons\r\n\r\n    let boxValues = []\r\n\r\n    const inputAreas =[(<TextField value={name} name=\"name\" onChange={e => setName(e.target.value)}/>),(<TextField value={surname} onChange={e => setSurname(e.target.value)}/>),(<TextField type=\"number\" value={age} onChange={e => setAge(parseInt(e.target.value))}/>)]\r\n    const defaultNames=[(props.name ? props.name: \"Loading\"),(props.surname ? props.surname: \"Loading\"),(props.age ? props.age: \"Loading\")]\r\n\r\n    if(operation ===\"EDIT\") boxValues=inputAreas\r\n    else boxValues=defaultNames\r\n\r\n    return(\r\n        <div className={styl.box}>\r\n        \r\n            {operation===\"NONE\"?<p><a><img alt={\"\"} src='http://mymbs.co.id/public/upload/image/user/user.png'></img></a></p> :null}\r\n            <form onSubmit={handleSubmit} >\r\n            <span>Name: {boxValues[0]}</span>\r\n            <span>Surname: {boxValues[1]}</span>\r\n            <span>Age: {boxValues[2]}</span>\r\n            {operation===\"DELETE\" ? (<span>Are You sure?<br/></span>) : null}\r\n            <div>\r\n            {chosenButtons}\r\n            </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => ({\r\n\r\n}) \r\n\r\nlet ProfileBoxHOC = connect(mapStateToProps,{setProfilesAC})(ProfileBox)\r\nexport default  ProfileBoxHOC;\r\n","import { connect } from \"react-redux\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport {setProfilesAC} from './../../../redux/actionCreators'\r\n\r\nimport { getProfiles, profileChange } from \"../../../apiCalls/apiCalls\"\r\n\r\nimport styl from './UserProfiles.module.css'\r\nimport ProfileBoxHOC from \"./ProfileBox\"\r\nimport { Add } from \"css.gg\"\r\nimport { Button, TextField } from \"@material-ui/core\"\r\n\r\n\r\n\r\n\r\n\r\nfunction UserProfiles(props){\r\n    const [operation, setOperation] = useState();\r\n    const [name, setName] = useState();\r\n    const [surname, setSurname] = useState();\r\n    const [age, setAge] = useState();\r\n    \r\n    let username=(props.wantedUser? props.wantedUser: props.currUser.email);\r\n\r\n    useEffect(() => {\r\n        props.setProfilesAC([])\r\n            if(props.wantedUser){\r\n                getProfiles(props.wantedUser).then(profiles =>{\r\n\r\n                    props.setProfilesAC(profiles)\r\n                })\r\n                \r\n\r\n            }\r\n            else{\r\n\r\n                getProfiles(props.currUser.email).then(profiles =>{\r\n\r\n                    props.setProfilesAC(profiles)\r\n                })\r\n            }\r\n    },[username])\r\n\r\n    const handleSubmit = async e => {\r\n        \r\n        e.preventDefault();\r\n        if(operation ===\"ADD\"){\r\n            const addProfileResult = await profileChange(\r\n                {name,surname,age,author:(props.wantedUser ? props.wantedUser : props.currUser.email)},\"PUT\"\r\n            )\r\n\r\n            if(addProfileResult===false){\r\n                alert(\"duplicate profile\")\r\n            }\r\n            getProfiles(username).then((result)=>{\r\n                props.setProfilesAC(result)\r\n                setOperation(\"NONE\")\r\n              })\r\n        }\r\n      }\r\n\r\n    \r\n        \r\n       \r\n     \r\n    let userboxes = [...props.profileList].map(el => <ProfileBoxHOC  key={el._id} currUser={(props.wantedUser ? props.wantedUser : props.currUser.email)} name={el.name} surname={el.surname} age={el.age} author={el.author}/>)\r\nreturn(\r\n    <div>\r\n        <div className={styl.Userboard}>\r\n        <div name=\"Greeting\">\r\n        Welcome, {props.currUser.email}!<br/>\r\n        Browsing, {(props.wantedUser ? props.wantedUser : props.currUser.email)} profiles </div>\r\n\r\n        \r\n        {operation === \"ADD\" ? <form onSubmit={handleSubmit} >\r\n        <label>\r\n          <p>Name</p>\r\n          <TextField type=\"text\" name='name' onChange={e => setName(e.target.value)}/>\r\n        </label>\r\n        <label>\r\n          <p>Surname</p>\r\n          <TextField type=\"text\" name='surname' onChange={e => setSurname(e.target.value)}/>\r\n        </label>\r\n        <label>\r\n          <p>Age</p>\r\n          <TextField type=\"number\" name='age' onChange={e => setAge(parseInt(e.target.value))}/>\r\n        </label>\r\n        <div>\r\n          <Button type=\"submit\" className={styl.submitButton}>Submit</Button>\r\n          <Button /*className={styl.submitButton}*/ onClick={()=>{setOperation(\"NONE\")}}>Cancel</Button>\r\n        </div>\r\n      </form> : <Button className={styl.addButton} id=\"ADD\"  value=\"ADD\" onClick={e => setOperation(e.target.value)}><Add/>Add Profile</Button> }\r\n          </div>\r\n        <div className={styl.boxGrid}>{userboxes}</div>\r\n    </div>\r\n)\r\n\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => {\r\n    \r\n        return({\r\n            currUser:state.authData.currUser, \r\n            profileList:state.profileData.currProfiles\r\n        })\r\n    }\r\n    \r\n\r\n\r\n\r\nlet HocUserProfiles = connect(mapStateToProps,{setProfilesAC})(UserProfiles)\r\nexport default HocUserProfiles ","import React,{useEffect, useState} from 'react';\r\nimport HocUserProfiles from './userprofiles/UserProfiles';\r\nimport {useLocation} from 'react-router-dom'\r\n\r\n\r\nexport default function Userboard(props) {\r\n    \r\n  return(<div >\r\n  \r\n    <HocUserProfiles wantedUser={props.state.authData.currUser ? props.state.authData.currUser.email : null} />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport function AdminUserboard(props) {\r\n    let location = useLocation();\r\n\r\n      const [wantedUser, setWantedUser] = useState();\r\n      useEffect(()=>{\r\n        setWantedUser(location.state.wantedProfile)\r\n      },[])\r\n      \r\n    return(\r\n        <div>\r\n\r\n    <HocUserProfiles wantedUser={wantedUser ? wantedUser : null} />\r\n    </div>\r\n    )\r\n}","import { Controller, Eye, Home, LogOff, LogOut } from 'css.gg'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styl from './Header.module.css'\r\n\r\nexport default  function Header(props){\r\n    return(\r\n        <div className={styl.Header}>\r\n        <div className={styl.User}><img className={props.currUser.role === 'ADMIN' ? styl.adminPhoto : styl.userPhoto} alt={\"\"} src={\"http://mymbs.co.id/public/upload/image/user/user.png\"}></img><p>{props.currUser.email}</p></div>\r\n        <div className={styl.Buttons}>\r\n        <NavLink to={{\r\n   pathname:'/',\r\n   state: {wantedProfile:props.currUser.email}  \r\n }}><Home/>Home</NavLink>\r\n            \r\n            {props.currUser.role === 'ADMIN' ? <NavLink to=\"/control\"><Eye/>Control</NavLink>:null}\r\n            <a name=\"LogOut\" onClick={()=>{props.clearToken()}}><LogOff/>Log Out</a>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n    \r\n\r\n\r\n}","import React,{ useState} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {fetchUsers} from './ControlPanel'\r\nimport styl from './../userboard/userprofiles/UserProfiles.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Check, Close, Pen, Trash } from 'css.gg'\r\nimport { Button, Select, TextField } from '@material-ui/core';\r\n\r\n\r\nfunction UserBox(props) {\r\n     \r\n    const [operation, setOperation] = useState(\"NONE\");\r\n    const [name, setName] = useState(props.user.name);\r\n    const [mail, setMail] = useState(props.user.email);\r\n    const [role, setRole] = useState(props.user.role);\r\n  \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(operation === 'EDIT'){\r\n            const changeUserResult = await fetchUsers(\r\n                \"PATCH\", [{name,email:mail,role},{name:props.user.name,email:props.user.email,role:props.user.role}]\r\n            )\r\n\r\n            if(changeUserResult===false){\r\n                alert(\"duplicate user\")\r\n            }\r\n            fetchUsers(\"POST\").then((result)=>{\r\n            \r\n            props.setUsers(result) })\r\n            setOperation(\"NONE\")\r\n         \r\n        \r\n        \r\n      }\r\n      else if(operation === 'DELETE'){\r\n        const changeUserResult = await fetchUsers(\r\n            \"DELETE\", {name:props.user.name,email:props.user.email,role:props.user.role}\r\n        )\r\n\r\n        if(changeUserResult===false){\r\n            alert(\"profile not deleted\")\r\n        }\r\n        fetchUsers().then((result)=>{\r\n            setOperation(\"NONE\")\r\n            props.setUsers(result)\r\n            \r\n          })\r\n    \r\n    \r\n  }\r\n\r\n    }\r\n\r\n    \r\n\r\n   if(props.currUser.role === 'ADMIN'){\r\n    //\r\n    const questionButtons = [(<Button type=\"submit\" name=\"okay\"><Check/>Okay</Button>),(<Button value=\"NONE\" onClick={e => setOperation(\"NONE\")}><Close/> Cancel</Button>),null,null]\r\n    const defaultButtons =[null,null,(<Button value=\"EDIT\" name=\"edit\" onClick={e=>setOperation(\"EDIT\")}><Pen/>Edit</Button>),(<Button value=\"DELETE\" name=\"delete\" onClick={e=>setOperation(\"DELETE\")}><Trash/>Delete</Button>)]\r\n    \r\n    let chosenButtons = [];\r\n    \r\n    if(operation ===\"NONE\") chosenButtons=defaultButtons    \r\n    else chosenButtons=questionButtons\r\n\r\n    let boxValues = []\r\n\r\n    const inputAreas =[(<TextField value={name} name=\"name\" onChange={e => setName(e.target.value)}/>),(<TextField value={mail} onChange={e => setMail(e.target.value)}/>),( <Select id=\"roles\" value={role} onChange={(e) => setRole(e.target.value)} name=\"roles\"><option value=\"USER\">user</option><option value=\"ADMIN\">admin</option></Select>)]\r\n    const defaultNames=[(props.user? props.user.name: \"Loading\"),(props.user ? props.user.email: \"Loading\"),( props.user ? props.user.role: \"Loading\")]\r\n\r\n    if(operation ===\"EDIT\") boxValues=inputAreas\r\n    else boxValues=defaultNames\r\n    //\r\n  return(<div className={styl.box}>\r\n        {operation===\"NONE\"?<p>\r\n        <NavLink name=\"user\" to={{\r\n   pathname:'/userprofiles',\r\n   state: {wantedProfile:props.user.email}  \r\n }}><img alt={\"\"} src='http://mymbs.co.id/public/upload/image/user/user.png'></img></NavLink></p>:null}\r\n    <form onSubmit={handleSubmit} >\r\n    <span>Name: {boxValues[0]}</span>\r\n    <span>Mail: {boxValues[1]}</span>\r\n    <span>Role: {boxValues[2]}</span>\r\n    {operation===\"DELETE\" ? (<span>Are You sure?<br/></span>) : null}\r\n    <div>\r\n    {chosenButtons}\r\n    </div>\r\n    </form>\r\n</div>\r\n  );\r\n   }\r\n   else return (<span>You have no access to this data.</span>)\r\n}\r\n\r\nlet mapStateToProps = (state,ownProps) => ({\r\n    currUser:state.authData.currUser\r\n\r\n})\r\n\r\nlet UserBoxHOC =connect(mapStateToProps,{})(UserBox)\r\nexport default UserBoxHOC\r\n","import React, { useEffect, useState } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport UserBoxHOC from './UserBox';\r\nimport styl from './../userboard/userprofiles/UserProfiles.module.css'\r\nimport Dashboard from '../dashboard/Dashboard';\r\n\r\nexport async function fetchUsers(method,user=null) {\r\n \r\n  return fetch('/api/admin', {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({user})\r\n  })\r\n    .then(data => data.json()).catch(err =>{return err})\r\n }\r\n\r\n\r\n function ControlPanel(props) {\r\n  \r\n   const [Users,setUsers]=useState();\r\n   useEffect(()=>{\r\n     setUsers([])\r\n      const getUserList = fetchUsers(\"POST\").then(result =>{\r\n\r\n        setUsers(result)\r\n\r\n\r\n      })\r\n\r\n   },[])\r\n   if(props.currUser.role === 'ADMIN' && Users){\r\n     \r\n     let UserList = [...Users].map((e,i) => <UserBoxHOC key={Users[i]._id} setUsers={setUsers} user={Users[i]}/>)\r\n  return(<div>\r\n    \r\n   \r\n    <Dashboard/>\r\n    <div className={styl.boxGrid}>{UserList}</div>\r\n    </div>\r\n  );\r\n   }\r\n   else return (<span>You have no access to this page.</span>)\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  currUser:state.authData.currUser\r\n\r\n})\r\n\r\nlet ControlPanelHOC =connect(mapStateToProps,{})(ControlPanel)\r\nexport default ControlPanelHOC","import React from 'react'\r\nimport {useFormikContext} from 'formik'\r\nimport {TextField} from '@material-ui/core'\r\n\r\n\r\n\r\nfunction FormikMaterialTextField(props) {\r\n    const formik = useFormikContext()\r\n    const {name} = props\r\n\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            error={!!formik.errors[name]}\r\n            value={formik.values[name]}\r\n            onInput={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n        />\r\n    )\r\n}\r\n\r\nexport default FormikMaterialTextField\r\n","import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { loginUser, regUser,getProfiles } from \"../../apiCalls/apiCalls\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setUserAC, setProfilesAC } from \"../../redux/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\nimport FormikMaterialTextField from \"./common/FormikMaterialTextField\";\r\nimport styl from \"./styles/Login.module.css\";\r\nimport { Button, Radio } from \"@material-ui/core\";\r\n\r\n\r\nfunction validate (values,operation){\r\n    const errors={};\r\n    if (!values.email) {\r\n     errors.email = 'Required';\r\n   } else if (\r\n     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n   ) {\r\n     errors.email = 'Invalid email address';\r\n   }\r\n   if (!values.password){\r\n    errors.password = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-]{2,}$/i.test(values.password)\r\n  ) {\r\n    errors.password = 'Invalid password';\r\n  }\r\n  if (!values.name && operation===\"Register\"){\r\n    errors.name = 'Required';\r\n   } else if (\r\n    !/^[A-Z0-9._%+-]{2,}$/i.test(values.name) && operation===\"Register\"\r\n  ) {\r\n    errors.name = 'Invalid name';\r\n  }\r\n   return errors;\r\n}\r\n\r\nasync function authProcess(user,props,operation){\r\n    \r\n        console.log(user)\r\n      if (operation === \"Register\") {\r\n          const regResponse = await regUser(\r\n      {\r\n        username: user.email,\r\n        password: user.password,\r\n        role:\"USER\",\r\n        name: user.name\r\n      },\r\n      \"POST\"\r\n    );\r\n      console.log(regResponse)\r\n    if (regResponse === false) {\r\n      alert(\"Email already registered\");\r\n    }\r\n  }\r\n  const token = await loginUser(\r\n    {\r\n      username: user.email,\r\n      password:user.password,\r\n    },\r\n    \"POST\"\r\n  );\r\n  if (token[0].token) {\r\n    props.setToken(token[0]);\r\n    props.setUserAC({\r\n      email: user.email,\r\n      role: token[1],\r\n      token: token,\r\n    });\r\n    getProfiles(user.email).then((result) => {\r\n      props.setProfilesAC(result);\r\n    });\r\n  } else {\r\n    alert(\"Login failed\");\r\n  }\r\n  \r\n    }\r\n\r\n\r\n\r\n\r\nconst AuthForm = (props) => {\r\n  const [operation, setOperation] = useState(\"Login\");\r\n  return (\r\n    <Formik className={styl.formikWrap}\r\n      initialValues={{ email: \"\", password: \"\", name: \"\" }}\r\n      validate={(values)=>validate(values,operation)}\r\n      onSubmit={ async (user) => authProcess(user,{...props},operation) }\r\n    >\r\n      {({errors}) => {\r\n          console.log(errors) \r\n          return( \r\n        \r\n          <Form className={styl.formikForm}>\r\n            <div>\r\n            Email:<br/>\r\n            <FormikMaterialTextField name=\"email\" /><br/>\r\n            {errors ? errors.email:null}\r\n            </div>\r\n\r\n            <div>\r\n            Password:<br/>\r\n            <FormikMaterialTextField name=\"password\" /><br/>\r\n            {errors ? errors.password:null}\r\n            </div>\r\n\r\n            <div>\r\n            <label>\r\n              <Radio\r\n                type=\"radio\"\r\n                onChange={(e) => setOperation(\"Register\")}\r\n                checked={operation === \"Register\"}\r\n                name=\"radio\"\r\n                value=\"sign up\"\r\n              />\r\n              Sign up\r\n              \r\n            </label>\r\n\r\n\r\n            <label>\r\n              <Radio\r\n                type=\"radio\"\r\n                onChange={(e) => setOperation(\"Login\")}\r\n                checked={operation === \"Login\"}\r\n                name=\"radio\"\r\n                value=\"sign in\"\r\n              />\r\n              Sign in\r\n            </label>\r\n            </div>\r\n            {operation === \"Register\" ? <div>\r\n            Name:<br/>\r\n            <FormikMaterialTextField name=\"name\" /><br/>\r\n            {errors ? errors.name:null} </div>:null}\r\n            <Button type=\"submit\">Submit</Button>\r\n          </Form>\r\n        \r\n      )}}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nAuthForm.propTypes = {\r\n    setToken: PropTypes.func.isRequired,\r\n  };\r\n  \r\n  let mapStateToProps = (state, ownProps) => ({\r\n    state: state,\r\n    setToken: ownProps.setToken,\r\n  });\r\n  let AuthFormHOC = connect(mapStateToProps, { setUserAC, setProfilesAC })(AuthForm);\r\nexport default AuthFormHOC;","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Dashboard from './components/dashboard/Dashboard';\nimport useToken from './hooks/useToken';\nimport Userboard,{AdminUserboard} from './components/userboard/Userboard';\nimport {connect } from 'react-redux';\nimport { setTokenAC, setUserAC, setProfilesAC } from './redux/actionCreators';\nimport Header from './components/header/Header';\nimport ControlPanelHOC from './components/controlpanel/ControlPanel';\nimport AuthFormHOC from './components/forms/LoginForm';\nimport { getProfiles, loadUserFromToken } from './apiCalls/apiCalls';\n\n\n\n\nfunction AppMain(props) {\n \n  const { token, setToken, clearToken, renewToken, getToken } = useToken();\n  useEffect(()=>{\n      if(token){\n      loadUserFromToken(getToken()).then((result)=>{\n        if(!result.token){\n          clearToken()\n        }\n        else{\n\n          props.setUserAC(result)\n          props.setTokenAC(renewToken(result.token,result.email))\n\n          getProfiles(result.email).then((result)=>{\n            props.setProfilesAC(result)\n          })\n          \n          \n        }\n      })\n\n      \n    }\n      },[]\n  )\n \n  if (token && token.expiry < (new Date()).getTime()) {\n    clearToken()\n  }\n  if(!token ) {\n    \n    return <AuthFormHOC  setToken={setToken} />\n  }\n  else{\n\n    \n  return (\n    \n      <div className=\"wrapper\">\n        \n        \n        <BrowserRouter>\n          <Header currUser={props.state.authData.currUser} clearToken={clearToken}/>\n          <Switch>\n          <Route exact path=\"/\">\n              <Userboard  state={props.state}  clearToken={clearToken} />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/control\">\n              <ControlPanelHOC />\n            </Route>\n            <Route path=\"/userprofiles\">\n              <AdminUserboard />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n        \n      </div>\n      \n    );\n  }\n}\n\nlet mapStateToProps = (state) =>({\n  state:state\n})\n\nconst App = connect(mapStateToProps,{setUserAC,setTokenAC,setProfilesAC})(AppMain)\nexport default App;\n","import { useState } from 'react';\r\nimport { loginUser } from '../apiCalls/apiCalls.js';\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken);\r\n  };\r\n  const deleteToken = () => {\r\n      localStorage.removeItem('token');\r\n      setToken();\r\n  }\r\n  const renewToken = (token,email)=>{\r\n    loginUser({email},\"PUT\").then((result)=>{\r\n        setToken(result)\r\n        localStorage.setItem('token', JSON.stringify(result));\r\n\r\n        return result\r\n    })\r\n}\r\n  return {\r\n    \r\n    setToken: saveToken,\r\n    clearToken: deleteToken,\r\n    renewToken: renewToken,\r\n    getToken: getToken,\r\n    token\r\n  }\r\n\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const SET_USER = \"SET-USER\"\r\nconst SET_TOKEN = \"SET-TOKEN\"\r\n\r\nlet defaultUsers = {\r\n\r\n    currUser:{\r\n            \r\n            },\r\n           \r\n            \r\n          \r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport const authReducer = (state=defaultUsers,action)=>{\r\n    \r\n    \r\n    switch(action.type){\r\n        case SET_USER:\r\n\r\n            \r\n            \r\n                return({\r\n                    ...state,currUser: action.user\r\n                })\r\n                \r\n        case SET_TOKEN:\r\n\r\n                        return({\r\n                            ...state,currUser: {...state.currUser,token:{...action.token}}\r\n                        })\r\n                    \r\n        default:\r\n            return state\r\n\r\n    }\r\n    \r\n    \r\n\r\n\r\n}\r\nexport default authReducer;","const SET_PROFILES = \"SET-PROFILES\"\r\n\r\nlet defaultProfiles = {\r\n\r\n    currProfiles:[]\r\n            \r\n            \r\n           \r\n            \r\n          \r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport const profileReducer = (state=defaultProfiles,action)=>{\r\n    \r\n   \r\n    switch(action.type){\r\n        case SET_PROFILES:\r\n\r\n                return({\r\n                    ...state,currProfiles: [...action.profiles]\r\n                })\r\n            \r\n        default:\r\n            return state\r\n\r\n    }\r\n    \r\n    \r\n\r\n\r\n}\r\nexport default profileReducer;","import { combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport profileReducer from \"./profilesReducer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    authData: authReducer,\r\n    profileData: profileReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\n\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from  './redux/redux-store'\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <App state={store.getState()} dispatch={store.dispatch.bind(store)} />\n  </Provider>\n  ,\n  document.getElementById('root')\n  \n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}